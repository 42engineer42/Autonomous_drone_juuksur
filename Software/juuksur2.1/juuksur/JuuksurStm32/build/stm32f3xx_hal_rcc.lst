ARM GAS  /tmp/ccDUHHvc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB126:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
ARM GAS  /tmp/ccDUHHvc.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccDUHHvc.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
ARM GAS  /tmp/ccDUHHvc.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
ARM GAS  /tmp/ccDUHHvc.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  28              		.loc 1 233 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0;
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  40              		.loc 1 237 0
  41 0002 354A     		ldr	r2, .L18
  42 0004 1368     		ldr	r3, [r2]
  43 0006 43F00103 		orr	r3, r3, #1
  44 000a 1360     		str	r3, [r2]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSIRDY bit is set before writing default HSITRIM value */
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  45              		.loc 1 241 0
ARM GAS  /tmp/ccDUHHvc.s 			page 6


  46 000c FFF7FEFF 		bl	HAL_GetTick
  47              	.LVL1:
  48 0010 0446     		mov	r4, r0
  49              	.LVL2:
  50              	.L2:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till HSI is ready */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  51              		.loc 1 244 0
  52 0012 314B     		ldr	r3, .L18
  53 0014 1B68     		ldr	r3, [r3]
  54 0016 13F0020F 		tst	r3, #2
  55 001a 07D1     		bne	.L14
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 246 0
  57 001c FFF7FEFF 		bl	HAL_GetTick
  58              	.LVL3:
  59 0020 001B     		subs	r0, r0, r4
  60 0022 0228     		cmp	r0, #2
  61 0024 F5D9     		bls	.L2
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
  62              		.loc 1 248 0
  63 0026 0324     		movs	r4, #3
  64              	.LVL4:
  65              	.L3:
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSITRIM default value */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, RCC_CR_HSITRIM_4);
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSI selected as system clock source */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccDUHHvc.s 			page 7


 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure PLLRDY is reset */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Clear all interrupt flags */
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset all CSR flags */
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
  66              		.loc 1 316 0
  67 0028 2046     		mov	r0, r4
  68 002a 38BD     		pop	{r3, r4, r5, pc}
  69              	.LVL5:
  70              	.L14:
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  71              		.loc 1 253 0
  72 002c 2A4A     		ldr	r2, .L18
  73 002e 1368     		ldr	r3, [r2]
  74 0030 23F0F803 		bic	r3, r3, #248
  75 0034 43F08003 		orr	r3, r3, #128
  76 0038 1360     		str	r3, [r2]
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  77              		.loc 1 256 0
  78 003a 5168     		ldr	r1, [r2, #4]
  79 003c 274B     		ldr	r3, .L18+4
  80 003e 0B40     		ands	r3, r3, r1
  81 0040 5360     		str	r3, [r2, #4]
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDUHHvc.s 			page 8


  82              		.loc 1 260 0
  83 0042 FFF7FEFF 		bl	HAL_GetTick
  84              	.LVL6:
  85 0046 0446     		mov	r4, r0
  86              	.LVL7:
  87              	.L5:
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
  88              		.loc 1 263 0
  89 0048 234B     		ldr	r3, .L18
  90 004a 5B68     		ldr	r3, [r3, #4]
  91 004c 13F00C0F 		tst	r3, #12
  92 0050 08D0     		beq	.L15
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
  93              		.loc 1 265 0
  94 0052 FFF7FEFF 		bl	HAL_GetTick
  95              	.LVL8:
  96 0056 001B     		subs	r0, r0, r4
  97 0058 41F28833 		movw	r3, #5000
  98 005c 9842     		cmp	r0, r3
  99 005e F3D9     		bls	.L5
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 100              		.loc 1 267 0
 101 0060 0324     		movs	r4, #3
 102              	.LVL9:
 103 0062 E1E7     		b	.L3
 104              	.LVL10:
 105              	.L15:
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 106              		.loc 1 272 0
 107 0064 1E4B     		ldr	r3, .L18+8
 108 0066 1F4A     		ldr	r2, .L18+12
 109 0068 1A60     		str	r2, [r3]
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 110              		.loc 1 275 0
 111 006a 0020     		movs	r0, #0
 112 006c FFF7FEFF 		bl	HAL_InitTick
 113              	.LVL11:
 114 0070 0446     		mov	r4, r0
 115              	.LVL12:
 116 0072 08B1     		cbz	r0, .L16
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 117              		.loc 1 277 0
 118 0074 0124     		movs	r4, #1
 119 0076 D7E7     		b	.L3
 120              	.L16:
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 121              		.loc 1 281 0
 122 0078 174A     		ldr	r2, .L18
 123 007a 1368     		ldr	r3, [r2]
 124 007c 23F08473 		bic	r3, r3, #17301504
 125 0080 23F48033 		bic	r3, r3, #65536
 126 0084 1360     		str	r3, [r2]
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 127              		.loc 1 284 0
 128 0086 1368     		ldr	r3, [r2]
 129 0088 23F48023 		bic	r3, r3, #262144
 130 008c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccDUHHvc.s 			page 9


 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 131              		.loc 1 288 0
 132 008e FFF7FEFF 		bl	HAL_GetTick
 133              	.LVL13:
 134 0092 0546     		mov	r5, r0
 135              	.LVL14:
 136              	.L7:
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 137              		.loc 1 289 0
 138 0094 104B     		ldr	r3, .L18
 139 0096 1B68     		ldr	r3, [r3]
 140 0098 13F0007F 		tst	r3, #33554432
 141 009c 06D0     		beq	.L17
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 142              		.loc 1 291 0
 143 009e FFF7FEFF 		bl	HAL_GetTick
 144              	.LVL15:
 145 00a2 401B     		subs	r0, r0, r5
 146 00a4 0228     		cmp	r0, #2
 147 00a6 F5D9     		bls	.L7
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 148              		.loc 1 293 0
 149 00a8 0324     		movs	r4, #3
 150 00aa BDE7     		b	.L3
 151              	.L17:
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 152              		.loc 1 298 0
 153 00ac 0A4B     		ldr	r3, .L18
 154 00ae 0022     		movs	r2, #0
 155 00b0 5A60     		str	r2, [r3, #4]
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156              		.loc 1 301 0
 157 00b2 DA62     		str	r2, [r3, #44]
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 158              		.loc 1 304 0
 159 00b4 1A63     		str	r2, [r3, #48]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 160              		.loc 1 307 0
 161 00b6 9968     		ldr	r1, [r3, #8]
 162 00b8 41F41F01 		orr	r1, r1, #10420224
 163 00bc 9960     		str	r1, [r3, #8]
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 164              		.loc 1 310 0
 165 00be 9A60     		str	r2, [r3, #8]
 166              	.LVL16:
 167              	.LBB168:
 168              	.LBB169:
 169              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
ARM GAS  /tmp/ccDUHHvc.s 			page 10


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  /tmp/ccDUHHvc.s 			page 11


  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
ARM GAS  /tmp/ccDUHHvc.s 			page 12


 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDUHHvc.s 			page 13


 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
ARM GAS  /tmp/ccDUHHvc.s 			page 14


 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccDUHHvc.s 			page 15


 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDUHHvc.s 			page 16


 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDUHHvc.s 			page 17


 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
ARM GAS  /tmp/ccDUHHvc.s 			page 18


 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
ARM GAS  /tmp/ccDUHHvc.s 			page 19


 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 170              		.loc 2 531 0
 171 00c0 4FF08072 		mov	r2, #16777216
 172              		.syntax unified
 173              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 174 00c4 92FAA2F2 		rbit r2, r2
 175              	@ 0 "" 2
 176              	.LVL17:
 177              		.thumb
 178              		.syntax unified
 179              	.LBE169:
 180              	.LBE168:
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 181              		.loc 1 313 0
 182 00c8 B2FA82F2 		clz	r2, r2
 183 00cc 064B     		ldr	r3, .L18+16
 184 00ce 1344     		add	r3, r3, r2
 185 00d0 9B00     		lsls	r3, r3, #2
 186 00d2 0122     		movs	r2, #1
 187 00d4 1A60     		str	r2, [r3]
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 188              		.loc 1 315 0
 189 00d6 A7E7     		b	.L3
 190              	.L19:
 191              		.align	2
 192              	.L18:
 193 00d8 00100240 		.word	1073876992
 194 00dc 0CC0FFF8 		.word	-117456884
 195 00e0 00000000 		.word	SystemCoreClock
 196 00e4 00127A00 		.word	8000000
 197 00e8 20819010 		.word	277905696
 198              		.cfi_endproc
 199              	.LFE126:
 201              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 202              		.align	1
 203              		.global	HAL_RCC_OscConfig
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	HAL_RCC_OscConfig:
 210              	.LFB127:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
ARM GAS  /tmp/ccDUHHvc.s 			page 20


 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 211              		.loc 1 333 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 8
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL18:
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 216              		.loc 1 337 0
 217 0000 0028     		cmp	r0, #0
 218 0002 00F0F982 		beq	.L93
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 219              		.loc 1 333 0
 220 0006 70B5     		push	{r4, r5, r6, lr}
 221              	.LCFI1:
 222              		.cfi_def_cfa_offset 16
 223              		.cfi_offset 4, -16
 224              		.cfi_offset 5, -12
 225              		.cfi_offset 6, -8
 226              		.cfi_offset 14, -4
 227 0008 82B0     		sub	sp, sp, #8
 228              	.LCFI2:
 229              		.cfi_def_cfa_offset 24
 230 000a 0446     		mov	r4, r0
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 231              		.loc 1 346 0
 232 000c 0368     		ldr	r3, [r0]
 233 000e 13F0010F 		tst	r3, #1
 234 0012 3DD0     		beq	.L22
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 235              		.loc 1 352 0
 236 0014 B44B     		ldr	r3, .L131
 237 0016 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccDUHHvc.s 			page 21


 238 0018 03F00C03 		and	r3, r3, #12
 239 001c 042B     		cmp	r3, #4
 240 001e 20D0     		beq	.L23
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 241              		.loc 1 353 0
 242 0020 B14B     		ldr	r3, .L131
 243 0022 5B68     		ldr	r3, [r3, #4]
 244 0024 03F00C03 		and	r3, r3, #12
 245 0028 082B     		cmp	r3, #8
 246 002a 13D0     		beq	.L115
 247              	.L24:
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 248              		.loc 1 363 0
 249 002c 6368     		ldr	r3, [r4, #4]
 250 002e B3F5803F 		cmp	r3, #65536
 251 0032 6AD0     		beq	.L116
 252              		.loc 1 363 0 is_stmt 0 discriminator 2
 253 0034 002B     		cmp	r3, #0
 254 0036 40F08D80 		bne	.L29
 255              		.loc 1 363 0 discriminator 3
 256 003a 03F18043 		add	r3, r3, #1073741824
 257 003e 03F50433 		add	r3, r3, #135168
 258 0042 1A68     		ldr	r2, [r3]
 259 0044 22F48032 		bic	r2, r2, #65536
 260 0048 1A60     		str	r2, [r3]
 261 004a 1A68     		ldr	r2, [r3]
 262 004c 22F48022 		bic	r2, r2, #262144
 263 0050 1A60     		str	r2, [r3]
 264 0052 5FE0     		b	.L28
 265              	.L115:
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 266              		.loc 1 353 0 is_stmt 1 discriminator 1
 267 0054 A44B     		ldr	r3, .L131
 268 0056 5B68     		ldr	r3, [r3, #4]
 269 0058 03F4C033 		and	r3, r3, #98304
 270 005c B3F5803F 		cmp	r3, #65536
 271 0060 E4D1     		bne	.L24
 272              	.L23:
 273              	.LVL19:
 274              	.LBB170:
 275              	.LBB171:
 276              		.loc 2 531 0
 277 0062 4FF40033 		mov	r3, #131072
 278              		.syntax unified
 279              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 280 0066 93FAA3F3 		rbit r3, r3
 281              	@ 0 "" 2
 282              	.LVL20:
ARM GAS  /tmp/ccDUHHvc.s 			page 22


 283              		.thumb
 284              		.syntax unified
 285              	.LBE171:
 286              	.LBE170:
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 287              		.loc 1 355 0
 288 006a 9F4B     		ldr	r3, .L131
 289 006c 1968     		ldr	r1, [r3]
 290              	.LVL21:
 291              	.LBB172:
 292              	.LBB173:
 293              		.loc 2 531 0
 294 006e 4FF40033 		mov	r3, #131072
 295              		.syntax unified
 296              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 297 0072 93FAA3F3 		rbit r3, r3
 298              	@ 0 "" 2
 299              	.LVL22:
 300              		.thumb
 301              		.syntax unified
 302              	.LBE173:
 303              	.LBE172:
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 304              		.loc 1 355 0
 305 0076 B3FA83F3 		clz	r3, r3
 306 007a 03F01F03 		and	r3, r3, #31
 307 007e 0122     		movs	r2, #1
 308 0080 02FA03F3 		lsl	r3, r2, r3
 309 0084 0B42     		tst	r3, r1
 310 0086 03D0     		beq	.L22
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 311              		.loc 1 355 0 is_stmt 0 discriminator 13
 312 0088 6368     		ldr	r3, [r4, #4]
 313 008a 002B     		cmp	r3, #0
 314 008c 00F0BC82 		beq	.L117
 315              	.LVL23:
 316              	.L22:
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccDUHHvc.s 			page 23


 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 317              		.loc 1 402 0 is_stmt 1
 318 0090 2368     		ldr	r3, [r4]
 319 0092 13F0020F 		tst	r3, #2
 320 0096 00F0C180 		beq	.L40
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 321              		.loc 1 409 0
 322 009a 934B     		ldr	r3, .L131
 323 009c 5B68     		ldr	r3, [r3, #4]
 324 009e 13F00C0F 		tst	r3, #12
 325 00a2 00F09780 		beq	.L41
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 326              		.loc 1 410 0
 327 00a6 904B     		ldr	r3, .L131
 328 00a8 5B68     		ldr	r3, [r3, #4]
 329 00aa 03F00C03 		and	r3, r3, #12
 330 00ae 082B     		cmp	r3, #8
 331 00b0 00F08880 		beq	.L118
 332              	.L42:
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
ARM GAS  /tmp/ccDUHHvc.s 			page 24


 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 333              		.loc 1 427 0
 334 00b4 E368     		ldr	r3, [r4, #12]
 335 00b6 002B     		cmp	r3, #0
 336 00b8 00F0EE80 		beq	.L46
 337              	.LVL24:
 338              	.LBB174:
 339              	.LBB175:
 340              		.loc 2 531 0
 341 00bc 0122     		movs	r2, #1
 342              		.syntax unified
 343              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 344 00be 92FAA2F3 		rbit r3, r2
 345              	@ 0 "" 2
 346              	.LVL25:
 347              		.thumb
 348              		.syntax unified
 349              	.LBE175:
 350              	.LBE174:
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 351              		.loc 1 430 0
 352 00c2 B3FA83F3 		clz	r3, r3
 353 00c6 03F18453 		add	r3, r3, #276824064
 354 00ca 03F58413 		add	r3, r3, #1081344
 355 00ce 9B00     		lsls	r3, r3, #2
 356 00d0 1A60     		str	r2, [r3]
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 357              		.loc 1 433 0
 358 00d2 FFF7FEFF 		bl	HAL_GetTick
 359              	.LVL26:
 360 00d6 0546     		mov	r5, r0
 361              	.LVL27:
 362              	.L47:
 363              	.LBB176:
 364              	.LBB177:
 365              		.loc 2 531 0
 366 00d8 0223     		movs	r3, #2
 367              		.syntax unified
 368              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 369 00da 93FAA3F3 		rbit r3, r3
 370              	@ 0 "" 2
 371              	.LVL28:
 372              		.thumb
 373              		.syntax unified
 374              	.LBE177:
 375              	.LBE176:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 376              		.loc 1 436 0
 377 00de 824B     		ldr	r3, .L131
ARM GAS  /tmp/ccDUHHvc.s 			page 25


 378 00e0 1968     		ldr	r1, [r3]
 379              	.LVL29:
 380              	.LBB178:
 381              	.LBB179:
 382              		.loc 2 531 0
 383 00e2 0223     		movs	r3, #2
 384              		.syntax unified
 385              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 386 00e4 93FAA3F3 		rbit r3, r3
 387              	@ 0 "" 2
 388              	.LVL30:
 389              		.thumb
 390              		.syntax unified
 391              	.LBE179:
 392              	.LBE178:
 393              		.loc 1 436 0
 394 00e8 B3FA83F3 		clz	r3, r3
 395 00ec 03F01F03 		and	r3, r3, #31
 396 00f0 0122     		movs	r2, #1
 397 00f2 02FA03F3 		lsl	r3, r2, r3
 398 00f6 0B42     		tst	r3, r1
 399 00f8 40F0BF80 		bne	.L119
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 400              		.loc 1 438 0
 401 00fc FFF7FEFF 		bl	HAL_GetTick
 402              	.LVL31:
 403 0100 401B     		subs	r0, r0, r5
 404 0102 0228     		cmp	r0, #2
 405 0104 E8D9     		bls	.L47
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 406              		.loc 1 440 0
 407 0106 0320     		movs	r0, #3
 408 0108 85E2     		b	.L21
 409              	.LVL32:
 410              	.L116:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 411              		.loc 1 363 0 discriminator 1
 412 010a 774A     		ldr	r2, .L131
 413 010c 1368     		ldr	r3, [r2]
 414 010e 43F48033 		orr	r3, r3, #65536
 415 0112 1360     		str	r3, [r2]
 416              	.L28:
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 417              		.loc 1 371 0
 418 0114 6368     		ldr	r3, [r4, #4]
 419 0116 002B     		cmp	r3, #0
 420 0118 36D0     		beq	.L31
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 421              		.loc 1 374 0
 422 011a FFF7FEFF 		bl	HAL_GetTick
 423              	.LVL33:
 424 011e 0546     		mov	r5, r0
 425              	.LVL34:
 426              	.L32:
 427              	.LBB180:
ARM GAS  /tmp/ccDUHHvc.s 			page 26


 428              	.LBB181:
 429              		.loc 2 531 0
 430 0120 4FF40033 		mov	r3, #131072
 431              		.syntax unified
 432              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 433 0124 93FAA3F3 		rbit r3, r3
 434              	@ 0 "" 2
 435              	.LVL35:
 436              		.thumb
 437              		.syntax unified
 438              	.LBE181:
 439              	.LBE180:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 440              		.loc 1 377 0
 441 0128 6F4B     		ldr	r3, .L131
 442 012a 1968     		ldr	r1, [r3]
 443              	.LVL36:
 444              	.LBB182:
 445              	.LBB183:
 446              		.loc 2 531 0
 447 012c 4FF40033 		mov	r3, #131072
 448              		.syntax unified
 449              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 450 0130 93FAA3F3 		rbit r3, r3
 451              	@ 0 "" 2
 452              	.LVL37:
 453              		.thumb
 454              		.syntax unified
 455              	.LBE183:
 456              	.LBE182:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 457              		.loc 1 377 0
 458 0134 B3FA83F3 		clz	r3, r3
 459 0138 03F01F03 		and	r3, r3, #31
 460 013c 0122     		movs	r2, #1
 461 013e 02FA03F3 		lsl	r3, r2, r3
 462 0142 0B42     		tst	r3, r1
 463 0144 A4D1     		bne	.L22
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 464              		.loc 1 379 0
 465 0146 FFF7FEFF 		bl	HAL_GetTick
 466              	.LVL38:
 467 014a 401B     		subs	r0, r0, r5
 468 014c 6428     		cmp	r0, #100
 469 014e E7D9     		bls	.L32
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 470              		.loc 1 381 0
 471 0150 0320     		movs	r0, #3
 472 0152 60E2     		b	.L21
 473              	.LVL39:
 474              	.L29:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 475              		.loc 1 363 0 discriminator 4
 476 0154 B3F5A02F 		cmp	r3, #327680
 477 0158 09D0     		beq	.L120
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 478              		.loc 1 363 0 is_stmt 0 discriminator 6
ARM GAS  /tmp/ccDUHHvc.s 			page 27


 479 015a 634B     		ldr	r3, .L131
 480 015c 1A68     		ldr	r2, [r3]
 481 015e 22F48032 		bic	r2, r2, #65536
 482 0162 1A60     		str	r2, [r3]
 483 0164 1A68     		ldr	r2, [r3]
 484 0166 22F48022 		bic	r2, r2, #262144
 485 016a 1A60     		str	r2, [r3]
 486 016c D2E7     		b	.L28
 487              	.L120:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 488              		.loc 1 363 0 discriminator 5
 489 016e 03F18043 		add	r3, r3, #1073741824
 490 0172 A3F53C33 		sub	r3, r3, #192512
 491 0176 1A68     		ldr	r2, [r3]
 492 0178 42F48022 		orr	r2, r2, #262144
 493 017c 1A60     		str	r2, [r3]
 494 017e 1A68     		ldr	r2, [r3]
 495 0180 42F48032 		orr	r2, r2, #65536
 496 0184 1A60     		str	r2, [r3]
 497 0186 C5E7     		b	.L28
 498              	.L31:
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 499              		.loc 1 388 0 is_stmt 1
 500 0188 FFF7FEFF 		bl	HAL_GetTick
 501              	.LVL40:
 502 018c 0546     		mov	r5, r0
 503              	.LVL41:
 504              	.L36:
 505              	.LBB184:
 506              	.LBB185:
 507              		.loc 2 531 0
 508 018e 4FF40033 		mov	r3, #131072
 509              		.syntax unified
 510              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 511 0192 93FAA3F3 		rbit r3, r3
 512              	@ 0 "" 2
 513              	.LVL42:
 514              		.thumb
 515              		.syntax unified
 516              	.LBE185:
 517              	.LBE184:
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 518              		.loc 1 391 0
 519 0196 544B     		ldr	r3, .L131
 520 0198 1968     		ldr	r1, [r3]
 521              	.LVL43:
 522              	.LBB186:
 523              	.LBB187:
 524              		.loc 2 531 0
 525 019a 4FF40033 		mov	r3, #131072
 526              		.syntax unified
 527              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 528 019e 93FAA3F3 		rbit r3, r3
 529              	@ 0 "" 2
 530              	.LVL44:
 531              		.thumb
 532              		.syntax unified
ARM GAS  /tmp/ccDUHHvc.s 			page 28


 533              	.LBE187:
 534              	.LBE186:
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 535              		.loc 1 391 0
 536 01a2 B3FA83F3 		clz	r3, r3
 537 01a6 03F01F03 		and	r3, r3, #31
 538 01aa 0122     		movs	r2, #1
 539 01ac 02FA03F3 		lsl	r3, r2, r3
 540 01b0 0B42     		tst	r3, r1
 541 01b2 3FF46DAF 		beq	.L22
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 542              		.loc 1 393 0
 543 01b6 FFF7FEFF 		bl	HAL_GetTick
 544              	.LVL45:
 545 01ba 401B     		subs	r0, r0, r5
 546 01bc 6428     		cmp	r0, #100
 547 01be E6D9     		bls	.L36
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 548              		.loc 1 395 0
 549 01c0 0320     		movs	r0, #3
 550 01c2 28E2     		b	.L21
 551              	.LVL46:
 552              	.L118:
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 553              		.loc 1 410 0 discriminator 1
 554 01c4 484B     		ldr	r3, .L131
 555 01c6 5B68     		ldr	r3, [r3, #4]
 556 01c8 03F4C033 		and	r3, r3, #98304
 557 01cc B3F5004F 		cmp	r3, #32768
 558 01d0 7FF470AF 		bne	.L42
 559              	.L41:
 560              	.LVL47:
 561              	.LBB188:
 562              	.LBB189:
 563              		.loc 2 531 0
 564 01d4 0223     		movs	r3, #2
 565              		.syntax unified
 566              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 567 01d6 93FAA3F3 		rbit r3, r3
 568              	@ 0 "" 2
 569              	.LVL48:
 570              		.thumb
 571              		.syntax unified
 572              	.LBE189:
 573              	.LBE188:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 574              		.loc 1 413 0
 575 01da 434B     		ldr	r3, .L131
 576 01dc 1968     		ldr	r1, [r3]
 577              	.LVL49:
 578              	.LBB190:
 579              	.LBB191:
 580              		.loc 2 531 0
 581 01de 0223     		movs	r3, #2
 582              		.syntax unified
 583              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 584 01e0 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccDUHHvc.s 			page 29


 585              	@ 0 "" 2
 586              	.LVL50:
 587              		.thumb
 588              		.syntax unified
 589              	.LBE191:
 590              	.LBE190:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 591              		.loc 1 413 0
 592 01e4 B3FA83F3 		clz	r3, r3
 593 01e8 03F01F03 		and	r3, r3, #31
 594 01ec 0122     		movs	r2, #1
 595 01ee 02FA03F3 		lsl	r3, r2, r3
 596 01f2 0B42     		tst	r3, r1
 597 01f4 04D0     		beq	.L45
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 598              		.loc 1 413 0 is_stmt 0 discriminator 13
 599 01f6 E368     		ldr	r3, [r4, #12]
 600 01f8 9342     		cmp	r3, r2
 601 01fa 01D0     		beq	.L45
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 602              		.loc 1 415 0 is_stmt 1
 603 01fc 0120     		movs	r0, #1
 604 01fe 0AE2     		b	.L21
 605              	.L45:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 606              		.loc 1 421 0
 607 0200 3948     		ldr	r0, .L131
 608 0202 0368     		ldr	r3, [r0]
 609 0204 23F0F803 		bic	r3, r3, #248
 610 0208 2169     		ldr	r1, [r4, #16]
 611              	.LVL51:
 612              	.LBB192:
 613              	.LBB193:
 614              		.loc 2 531 0
 615 020a F822     		movs	r2, #248
 616              		.syntax unified
 617              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 618 020c 92FAA2F2 		rbit r2, r2
 619              	@ 0 "" 2
 620              	.LVL52:
 621              		.thumb
 622              		.syntax unified
 623              	.LBE193:
 624              	.LBE192:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 625              		.loc 1 421 0
 626 0210 B2FA82F2 		clz	r2, r2
 627 0214 01FA02F2 		lsl	r2, r1, r2
 628 0218 1343     		orrs	r3, r3, r2
 629 021a 0360     		str	r3, [r0]
 630              	.L40:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccDUHHvc.s 			page 30


 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 631              		.loc 1 467 0
 632 021c 2368     		ldr	r3, [r4]
 633 021e 13F0080F 		tst	r3, #8
 634 0222 00F08D80 		beq	.L55
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 635              		.loc 1 473 0
 636 0226 6369     		ldr	r3, [r4, #20]
 637 0228 002B     		cmp	r3, #0
 638 022a 61D0     		beq	.L56
 639              	.LVL53:
 640              	.LBB194:
 641              	.LBB195:
 642              		.loc 2 531 0
 643 022c 0121     		movs	r1, #1
 644              		.syntax unified
 645              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 646 022e 91FAA1F2 		rbit r2, r1
 647              	@ 0 "" 2
 648              	.LVL54:
 649              		.thumb
 650              		.syntax unified
 651              	.LBE195:
 652              	.LBE194:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 653              		.loc 1 476 0
 654 0232 B2FA82F2 		clz	r2, r2
 655 0236 2D4B     		ldr	r3, .L131+4
 656 0238 1344     		add	r3, r3, r2
 657 023a 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccDUHHvc.s 			page 31


 658 023c 1960     		str	r1, [r3]
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 659              		.loc 1 479 0
 660 023e FFF7FEFF 		bl	HAL_GetTick
 661              	.LVL55:
 662 0242 0546     		mov	r5, r0
 663              	.LVL56:
 664              	.L57:
 665              	.LBB196:
 666              	.LBB197:
 667              		.loc 2 531 0
 668 0244 0223     		movs	r3, #2
 669              		.syntax unified
 670              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 671 0246 93FAA3F2 		rbit r2, r3
 672              	@ 0 "" 2
 673              	.LVL57:
 674              		.thumb
 675              		.syntax unified
 676              	.LBE197:
 677              	.LBE196:
 678              	.LBB198:
 679              	.LBB199:
 680              		.syntax unified
 681              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 682 024a 93FAA3F2 		rbit r2, r3
 683              	@ 0 "" 2
 684              	.LVL58:
 685              		.thumb
 686              		.syntax unified
 687              	.LBE199:
 688              	.LBE198:
 689              	.LBB200:
 690              	.LBB201:
 691              		.syntax unified
 692              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 693 024e 93FAA3F2 		rbit r2, r3
 694              	@ 0 "" 2
 695              	.LVL59:
 696              		.thumb
 697              		.syntax unified
 698              	.LBE201:
 699              	.LBE200:
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 700              		.loc 1 482 0
 701 0252 254A     		ldr	r2, .L131
 702 0254 516A     		ldr	r1, [r2, #36]
 703              	.LVL60:
 704              	.LBB202:
 705              	.LBB203:
 706              		.loc 2 531 0
 707              		.syntax unified
 708              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccDUHHvc.s 			page 32


 709 0256 93FAA3F3 		rbit r3, r3
 710              	@ 0 "" 2
 711              	.LVL61:
 712              		.thumb
 713              		.syntax unified
 714              	.LBE203:
 715              	.LBE202:
 716              		.loc 1 482 0
 717 025a B3FA83F3 		clz	r3, r3
 718 025e 03F01F03 		and	r3, r3, #31
 719 0262 0122     		movs	r2, #1
 720 0264 02FA03F3 		lsl	r3, r2, r3
 721 0268 0B42     		tst	r3, r1
 722 026a 69D1     		bne	.L55
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 723              		.loc 1 484 0
 724 026c FFF7FEFF 		bl	HAL_GetTick
 725              	.LVL62:
 726 0270 401B     		subs	r0, r0, r5
 727 0272 0228     		cmp	r0, #2
 728 0274 E6D9     		bls	.L57
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 729              		.loc 1 486 0
 730 0276 0320     		movs	r0, #3
 731 0278 CDE1     		b	.L21
 732              	.L119:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 733              		.loc 1 445 0
 734 027a 1B48     		ldr	r0, .L131
 735 027c 0368     		ldr	r3, [r0]
 736 027e 23F0F803 		bic	r3, r3, #248
 737 0282 2169     		ldr	r1, [r4, #16]
 738              	.LVL63:
 739              	.LBB204:
 740              	.LBB205:
 741              		.loc 2 531 0
 742 0284 F822     		movs	r2, #248
 743              		.syntax unified
 744              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 745 0286 92FAA2F2 		rbit r2, r2
 746              	@ 0 "" 2
 747              	.LVL64:
 748              		.thumb
 749              		.syntax unified
 750              	.LBE205:
 751              	.LBE204:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 752              		.loc 1 445 0
 753 028a B2FA82F2 		clz	r2, r2
 754 028e 01FA02F2 		lsl	r2, r1, r2
 755 0292 1343     		orrs	r3, r3, r2
 756 0294 0360     		str	r3, [r0]
 757 0296 C1E7     		b	.L40
 758              	.LVL65:
 759              	.L46:
ARM GAS  /tmp/ccDUHHvc.s 			page 33


 760              	.LBB206:
 761              	.LBB207:
 762              		.loc 2 531 0
 763 0298 0123     		movs	r3, #1
 764              		.syntax unified
 765              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 766 029a 93FAA3F3 		rbit r3, r3
 767              	@ 0 "" 2
 768              	.LVL66:
 769              		.thumb
 770              		.syntax unified
 771              	.LBE207:
 772              	.LBE206:
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 773              		.loc 1 450 0
 774 029e B3FA83F3 		clz	r3, r3
 775 02a2 03F18453 		add	r3, r3, #276824064
 776 02a6 03F58413 		add	r3, r3, #1081344
 777 02aa 9B00     		lsls	r3, r3, #2
 778 02ac 0022     		movs	r2, #0
 779 02ae 1A60     		str	r2, [r3]
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 780              		.loc 1 453 0
 781 02b0 FFF7FEFF 		bl	HAL_GetTick
 782              	.LVL67:
 783 02b4 0546     		mov	r5, r0
 784              	.LVL68:
 785              	.L51:
 786              	.LBB208:
 787              	.LBB209:
 788              		.loc 2 531 0
 789 02b6 0223     		movs	r3, #2
 790              		.syntax unified
 791              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 792 02b8 93FAA3F3 		rbit r3, r3
 793              	@ 0 "" 2
 794              	.LVL69:
 795              		.thumb
 796              		.syntax unified
 797              	.LBE209:
 798              	.LBE208:
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 799              		.loc 1 456 0
 800 02bc 0A4B     		ldr	r3, .L131
 801 02be 1968     		ldr	r1, [r3]
 802              	.LVL70:
 803              	.LBB210:
 804              	.LBB211:
 805              		.loc 2 531 0
 806 02c0 0223     		movs	r3, #2
 807              		.syntax unified
 808              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 809 02c2 93FAA3F3 		rbit r3, r3
 810              	@ 0 "" 2
 811              	.LVL71:
 812              		.thumb
 813              		.syntax unified
ARM GAS  /tmp/ccDUHHvc.s 			page 34


 814              	.LBE211:
 815              	.LBE210:
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 816              		.loc 1 456 0
 817 02c6 B3FA83F3 		clz	r3, r3
 818 02ca 03F01F03 		and	r3, r3, #31
 819 02ce 0122     		movs	r2, #1
 820 02d0 02FA03F3 		lsl	r3, r2, r3
 821 02d4 0B42     		tst	r3, r1
 822 02d6 A1D0     		beq	.L40
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 823              		.loc 1 458 0
 824 02d8 FFF7FEFF 		bl	HAL_GetTick
 825              	.LVL72:
 826 02dc 401B     		subs	r0, r0, r5
 827 02de 0228     		cmp	r0, #2
 828 02e0 E9D9     		bls	.L51
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 829              		.loc 1 460 0
 830 02e2 0320     		movs	r0, #3
 831 02e4 97E1     		b	.L21
 832              	.L132:
 833 02e6 00BF     		.align	2
 834              	.L131:
 835 02e8 00100240 		.word	1073876992
 836 02ec 20819010 		.word	277905696
 837              	.LVL73:
 838              	.L56:
 839              	.LBB212:
 840              	.LBB213:
 841              		.loc 2 531 0
 842 02f0 0122     		movs	r2, #1
 843              		.syntax unified
 844              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 845 02f2 92FAA2F2 		rbit r2, r2
 846              	@ 0 "" 2
 847              	.LVL74:
 848              		.thumb
 849              		.syntax unified
 850              	.LBE213:
 851              	.LBE212:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 852              		.loc 1 493 0
 853 02f6 B2FA82F2 		clz	r2, r2
 854 02fa C04B     		ldr	r3, .L133
 855 02fc 1344     		add	r3, r3, r2
 856 02fe 9B00     		lsls	r3, r3, #2
 857 0300 0022     		movs	r2, #0
 858 0302 1A60     		str	r2, [r3]
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
ARM GAS  /tmp/ccDUHHvc.s 			page 35


 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 859              		.loc 1 496 0
 860 0304 FFF7FEFF 		bl	HAL_GetTick
 861              	.LVL75:
 862 0308 0546     		mov	r5, r0
 863              	.LVL76:
 864              	.L59:
 865              	.LBB214:
 866              	.LBB215:
 867              		.loc 2 531 0
 868 030a 0223     		movs	r3, #2
 869              		.syntax unified
 870              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 871 030c 93FAA3F2 		rbit r2, r3
 872              	@ 0 "" 2
 873              	.LVL77:
 874              		.thumb
 875              		.syntax unified
 876              	.LBE215:
 877              	.LBE214:
 878              	.LBB216:
 879              	.LBB217:
 880              		.syntax unified
 881              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 882 0310 93FAA3F2 		rbit r2, r3
 883              	@ 0 "" 2
 884              	.LVL78:
 885              		.thumb
 886              		.syntax unified
 887              	.LBE217:
 888              	.LBE216:
 889              	.LBB218:
 890              	.LBB219:
 891              		.syntax unified
 892              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 893 0314 93FAA3F2 		rbit r2, r3
 894              	@ 0 "" 2
 895              	.LVL79:
 896              		.thumb
 897              		.syntax unified
 898              	.LBE219:
 899              	.LBE218:
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 900              		.loc 1 499 0
 901 0318 B94A     		ldr	r2, .L133+4
 902 031a 516A     		ldr	r1, [r2, #36]
 903              	.LVL80:
 904              	.LBB220:
 905              	.LBB221:
 906              		.loc 2 531 0
 907              		.syntax unified
 908              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 909 031c 93FAA3F3 		rbit r3, r3
 910              	@ 0 "" 2
 911              	.LVL81:
ARM GAS  /tmp/ccDUHHvc.s 			page 36


 912              		.thumb
 913              		.syntax unified
 914              	.LBE221:
 915              	.LBE220:
 916              		.loc 1 499 0
 917 0320 B3FA83F3 		clz	r3, r3
 918 0324 03F01F03 		and	r3, r3, #31
 919 0328 0122     		movs	r2, #1
 920 032a 02FA03F3 		lsl	r3, r2, r3
 921 032e 0B42     		tst	r3, r1
 922 0330 06D0     		beq	.L55
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 923              		.loc 1 501 0
 924 0332 FFF7FEFF 		bl	HAL_GetTick
 925              	.LVL82:
 926 0336 401B     		subs	r0, r0, r5
 927 0338 0228     		cmp	r0, #2
 928 033a E6D9     		bls	.L59
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 929              		.loc 1 503 0
 930 033c 0320     		movs	r0, #3
 931 033e 6AE1     		b	.L21
 932              	.LVL83:
 933              	.L55:
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 934              		.loc 1 509 0
 935 0340 2368     		ldr	r3, [r4]
 936 0342 13F0040F 		tst	r3, #4
 937 0346 00F0B380 		beq	.L61
 938              	.LVL84:
 939              	.LBB222:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 940              		.loc 1 518 0
 941 034a AD4B     		ldr	r3, .L133+4
 942 034c DB69     		ldr	r3, [r3, #28]
 943 034e 13F0805F 		tst	r3, #268435456
 944 0352 20D1     		bne	.L102
 945              	.LBB223:
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 946              		.loc 1 520 0
 947 0354 AA4B     		ldr	r3, .L133+4
ARM GAS  /tmp/ccDUHHvc.s 			page 37


 948 0356 DA69     		ldr	r2, [r3, #28]
 949 0358 42F08052 		orr	r2, r2, #268435456
 950 035c DA61     		str	r2, [r3, #28]
 951 035e DB69     		ldr	r3, [r3, #28]
 952 0360 03F08053 		and	r3, r3, #268435456
 953 0364 0193     		str	r3, [sp, #4]
 954 0366 019B     		ldr	r3, [sp, #4]
 955              	.LVL85:
 956              	.LBE223:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 957              		.loc 1 521 0
 958 0368 0125     		movs	r5, #1
 959              	.LVL86:
 960              	.L62:
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 961              		.loc 1 524 0
 962 036a A64B     		ldr	r3, .L133+8
 963 036c 1B68     		ldr	r3, [r3]
 964 036e 13F4807F 		tst	r3, #256
 965 0372 12D0     		beq	.L121
 966              	.L63:
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 967              		.loc 1 542 0
 968 0374 A368     		ldr	r3, [r4, #8]
 969 0376 012B     		cmp	r3, #1
 970 0378 23D0     		beq	.L122
 971              		.loc 1 542 0 is_stmt 0 discriminator 2
 972 037a 73BB     		cbnz	r3, .L68
 973              		.loc 1 542 0 discriminator 3
 974 037c 03F18043 		add	r3, r3, #1073741824
 975 0380 03F50433 		add	r3, r3, #135168
 976 0384 1A6A     		ldr	r2, [r3, #32]
 977 0386 22F00102 		bic	r2, r2, #1
 978 038a 1A62     		str	r2, [r3, #32]
 979 038c 1A6A     		ldr	r2, [r3, #32]
 980 038e 22F00402 		bic	r2, r2, #4
 981 0392 1A62     		str	r2, [r3, #32]
 982 0394 1AE0     		b	.L67
ARM GAS  /tmp/ccDUHHvc.s 			page 38


 983              	.LVL87:
 984              	.L102:
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 985              		.loc 1 511 0 is_stmt 1
 986 0396 0025     		movs	r5, #0
 987 0398 E7E7     		b	.L62
 988              	.LVL88:
 989              	.L121:
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 990              		.loc 1 527 0
 991 039a 9A4A     		ldr	r2, .L133+8
 992 039c 1368     		ldr	r3, [r2]
 993 039e 43F48073 		orr	r3, r3, #256
 994 03a2 1360     		str	r3, [r2]
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 995              		.loc 1 530 0
 996 03a4 FFF7FEFF 		bl	HAL_GetTick
 997              	.LVL89:
 998 03a8 0646     		mov	r6, r0
 999              	.LVL90:
 1000              	.L64:
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1001              		.loc 1 532 0
 1002 03aa 964B     		ldr	r3, .L133+8
 1003 03ac 1B68     		ldr	r3, [r3]
 1004 03ae 13F4807F 		tst	r3, #256
 1005 03b2 DFD1     		bne	.L63
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1006              		.loc 1 534 0
 1007 03b4 FFF7FEFF 		bl	HAL_GetTick
 1008              	.LVL91:
 1009 03b8 801B     		subs	r0, r0, r6
 1010 03ba 6428     		cmp	r0, #100
 1011 03bc F5D9     		bls	.L64
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1012              		.loc 1 536 0
 1013 03be 0320     		movs	r0, #3
 1014 03c0 29E1     		b	.L21
 1015              	.LVL92:
 1016              	.L122:
 1017              		.loc 1 542 0 discriminator 1
 1018 03c2 8F4A     		ldr	r2, .L133+4
 1019 03c4 136A     		ldr	r3, [r2, #32]
 1020 03c6 43F00103 		orr	r3, r3, #1
 1021 03ca 1362     		str	r3, [r2, #32]
 1022              	.L67:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1023              		.loc 1 544 0
 1024 03cc A368     		ldr	r3, [r4, #8]
 1025 03ce 002B     		cmp	r3, #0
 1026 03d0 41D0     		beq	.L70
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1027              		.loc 1 547 0
 1028 03d2 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccDUHHvc.s 			page 39


 1029              	.LVL93:
 1030 03d6 0646     		mov	r6, r0
 1031              	.LVL94:
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1032              		.loc 1 550 0
 1033 03d8 2BE0     		b	.L71
 1034              	.LVL95:
 1035              	.L68:
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 1036              		.loc 1 542 0 discriminator 4
 1037 03da 052B     		cmp	r3, #5
 1038 03dc 09D0     		beq	.L123
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 1039              		.loc 1 542 0 is_stmt 0 discriminator 6
 1040 03de 884B     		ldr	r3, .L133+4
 1041 03e0 1A6A     		ldr	r2, [r3, #32]
 1042 03e2 22F00102 		bic	r2, r2, #1
 1043 03e6 1A62     		str	r2, [r3, #32]
 1044 03e8 1A6A     		ldr	r2, [r3, #32]
 1045 03ea 22F00402 		bic	r2, r2, #4
 1046 03ee 1A62     		str	r2, [r3, #32]
 1047 03f0 ECE7     		b	.L67
 1048              	.L123:
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 1049              		.loc 1 542 0 discriminator 5
 1050 03f2 834B     		ldr	r3, .L133+4
 1051 03f4 1A6A     		ldr	r2, [r3, #32]
 1052 03f6 42F00402 		orr	r2, r2, #4
 1053 03fa 1A62     		str	r2, [r3, #32]
 1054 03fc 1A6A     		ldr	r2, [r3, #32]
 1055 03fe 42F00102 		orr	r2, r2, #1
 1056 0402 1A62     		str	r2, [r3, #32]
 1057 0404 E2E7     		b	.L67
 1058              	.LVL96:
 1059              	.L124:
 1060              		.loc 1 550 0 is_stmt 1 discriminator 4
 1061 0406 7E4B     		ldr	r3, .L133+4
 1062 0408 196A     		ldr	r1, [r3, #32]
 1063              	.L73:
 1064              	.LVL97:
 1065              	.LBB224:
 1066              	.LBB225:
 1067              		.loc 2 531 0 discriminator 11
 1068 040a 0223     		movs	r3, #2
 1069              		.syntax unified
 1070              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1071 040c 93FAA3F3 		rbit r3, r3
 1072              	@ 0 "" 2
 1073              	.LVL98:
 1074              		.thumb
 1075              		.syntax unified
 1076              	.LBE225:
 1077              	.LBE224:
 1078              		.loc 1 550 0 discriminator 11
 1079 0410 B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/ccDUHHvc.s 			page 40


 1080 0414 03F01F03 		and	r3, r3, #31
 1081 0418 0122     		movs	r2, #1
 1082 041a 02FA03F3 		lsl	r3, r2, r3
 1083 041e 1942     		tst	r1, r3
 1084 0420 45D1     		bne	.L75
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1085              		.loc 1 552 0
 1086 0422 FFF7FEFF 		bl	HAL_GetTick
 1087              	.LVL99:
 1088 0426 801B     		subs	r0, r0, r6
 1089 0428 41F28833 		movw	r3, #5000
 1090 042c 9842     		cmp	r0, r3
 1091 042e 00F2ED80 		bhi	.L104
 1092              	.L71:
 1093              	.LVL100:
 1094              	.LBB226:
 1095              	.LBB227:
 1096              		.loc 2 531 0
 1097 0432 0223     		movs	r3, #2
 1098              		.syntax unified
 1099              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1100 0434 93FAA3F2 		rbit r2, r3
 1101              	@ 0 "" 2
 1102              	.LVL101:
 1103              		.thumb
 1104              		.syntax unified
 1105              	.LBE227:
 1106              	.LBE226:
 1107              	.LBB228:
 1108              	.LBB229:
 1109              		.syntax unified
 1110              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1111 0438 93FAA3F3 		rbit r3, r3
 1112              	@ 0 "" 2
 1113              	.LVL102:
 1114              		.thumb
 1115              		.syntax unified
 1116              	.LBE229:
 1117              	.LBE228:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1118              		.loc 1 550 0
 1119 043c B3FA83F3 		clz	r3, r3
 1120 0440 5B09     		lsrs	r3, r3, #5
 1121 0442 43F00203 		orr	r3, r3, #2
 1122 0446 022B     		cmp	r3, #2
 1123 0448 DDD0     		beq	.L124
 1124              	.LVL103:
 1125              	.LBB230:
 1126              	.LBB231:
 1127              		.loc 2 531 0
 1128 044a 0223     		movs	r3, #2
 1129              		.syntax unified
 1130              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1131 044c 93FAA3F3 		rbit r3, r3
 1132              	@ 0 "" 2
 1133              	.LVL104:
ARM GAS  /tmp/ccDUHHvc.s 			page 41


 1134              		.thumb
 1135              		.syntax unified
 1136              	.LBE231:
 1137              	.LBE230:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1138              		.loc 1 550 0
 1139 0450 6B4B     		ldr	r3, .L133+4
 1140 0452 596A     		ldr	r1, [r3, #36]
 1141 0454 D9E7     		b	.L73
 1142              	.LVL105:
 1143              	.L70:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1144              		.loc 1 561 0
 1145 0456 FFF7FEFF 		bl	HAL_GetTick
 1146              	.LVL106:
 1147 045a 0646     		mov	r6, r0
 1148              	.LVL107:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1149              		.loc 1 564 0
 1150 045c 15E0     		b	.L76
 1151              	.LVL108:
 1152              	.L125:
 1153              		.loc 1 564 0 is_stmt 0 discriminator 4
 1154 045e 684B     		ldr	r3, .L133+4
 1155 0460 196A     		ldr	r1, [r3, #32]
 1156              	.L78:
 1157              	.LVL109:
 1158              	.LBB232:
 1159              	.LBB233:
 1160              		.loc 2 531 0 is_stmt 1 discriminator 11
 1161 0462 0223     		movs	r3, #2
 1162              		.syntax unified
 1163              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1164 0464 93FAA3F3 		rbit r3, r3
 1165              	@ 0 "" 2
 1166              	.LVL110:
 1167              		.thumb
 1168              		.syntax unified
 1169              	.LBE233:
 1170              	.LBE232:
 1171              		.loc 1 564 0 discriminator 11
 1172 0468 B3FA83F3 		clz	r3, r3
 1173 046c 03F01F03 		and	r3, r3, #31
 1174 0470 0122     		movs	r2, #1
 1175 0472 02FA03F3 		lsl	r3, r2, r3
 1176 0476 1942     		tst	r1, r3
 1177 0478 19D0     		beq	.L75
ARM GAS  /tmp/ccDUHHvc.s 			page 42


 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1178              		.loc 1 566 0
 1179 047a FFF7FEFF 		bl	HAL_GetTick
 1180              	.LVL111:
 1181 047e 801B     		subs	r0, r0, r6
 1182 0480 41F28833 		movw	r3, #5000
 1183 0484 9842     		cmp	r0, r3
 1184 0486 00F2C380 		bhi	.L105
 1185              	.L76:
 1186              	.LVL112:
 1187              	.LBB234:
 1188              	.LBB235:
 1189              		.loc 2 531 0
 1190 048a 0223     		movs	r3, #2
 1191              		.syntax unified
 1192              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1193 048c 93FAA3F2 		rbit r2, r3
 1194              	@ 0 "" 2
 1195              	.LVL113:
 1196              		.thumb
 1197              		.syntax unified
 1198              	.LBE235:
 1199              	.LBE234:
 1200              	.LBB236:
 1201              	.LBB237:
 1202              		.syntax unified
 1203              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1204 0490 93FAA3F3 		rbit r3, r3
 1205              	@ 0 "" 2
 1206              	.LVL114:
 1207              		.thumb
 1208              		.syntax unified
 1209              	.LBE237:
 1210              	.LBE236:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1211              		.loc 1 564 0
 1212 0494 B3FA83F3 		clz	r3, r3
 1213 0498 5B09     		lsrs	r3, r3, #5
 1214 049a 43F00203 		orr	r3, r3, #2
 1215 049e 022B     		cmp	r3, #2
 1216 04a0 DDD0     		beq	.L125
 1217              	.LVL115:
 1218              	.LBB238:
 1219              	.LBB239:
 1220              		.loc 2 531 0
 1221 04a2 0223     		movs	r3, #2
 1222              		.syntax unified
 1223              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1224 04a4 93FAA3F3 		rbit r3, r3
 1225              	@ 0 "" 2
 1226              	.LVL116:
 1227              		.thumb
 1228              		.syntax unified
 1229              	.LBE239:
 1230              	.LBE238:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccDUHHvc.s 			page 43


 1231              		.loc 1 564 0
 1232 04a8 554B     		ldr	r3, .L133+4
 1233 04aa 596A     		ldr	r1, [r3, #36]
 1234 04ac D9E7     		b	.L78
 1235              	.L75:
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1236              		.loc 1 574 0
 1237 04ae B5BB     		cbnz	r5, .L126
 1238              	.LVL117:
 1239              	.L61:
 1240              	.LBE222:
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1241              		.loc 1 583 0
 1242 04b0 A369     		ldr	r3, [r4, #24]
 1243 04b2 002B     		cmp	r3, #0
 1244 04b4 00F0AE80 		beq	.L106
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1245              		.loc 1 586 0
 1246 04b8 514A     		ldr	r2, .L133+4
 1247 04ba 5268     		ldr	r2, [r2, #4]
 1248 04bc 02F00C02 		and	r2, r2, #12
 1249 04c0 082A     		cmp	r2, #8
 1250 04c2 00F0AA80 		beq	.L107
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1251              		.loc 1 588 0
 1252 04c6 022B     		cmp	r3, #2
 1253 04c8 2FD0     		beq	.L127
 1254              	.LVL118:
 1255              	.LBB240:
 1256              	.LBB241:
 1257              		.loc 2 531 0
 1258 04ca 4FF08073 		mov	r3, #16777216
 1259              		.syntax unified
 1260              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1261 04ce 93FAA3F3 		rbit r3, r3
 1262              	@ 0 "" 2
 1263              	.LVL119:
 1264              		.thumb
 1265              		.syntax unified
ARM GAS  /tmp/ccDUHHvc.s 			page 44


 1266              	.LBE241:
 1267              	.LBE240:
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1268              		.loc 1 640 0
 1269 04d2 B3FA83F3 		clz	r3, r3
 1270 04d6 03F18453 		add	r3, r3, #276824064
ARM GAS  /tmp/ccDUHHvc.s 			page 45


 1271 04da 03F58413 		add	r3, r3, #1081344
 1272 04de 9B00     		lsls	r3, r3, #2
 1273 04e0 0022     		movs	r2, #0
 1274 04e2 1A60     		str	r2, [r3]
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1275              		.loc 1 643 0
 1276 04e4 FFF7FEFF 		bl	HAL_GetTick
 1277              	.LVL120:
 1278 04e8 0446     		mov	r4, r0
 1279              	.LVL121:
 1280              	.L89:
 1281              	.LBB242:
 1282              	.LBB243:
 1283              		.loc 2 531 0
 1284 04ea 4FF00073 		mov	r3, #33554432
 1285              		.syntax unified
 1286              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1287 04ee 93FAA3F3 		rbit r3, r3
 1288              	@ 0 "" 2
 1289              	.LVL122:
 1290              		.thumb
 1291              		.syntax unified
 1292              	.LBE243:
 1293              	.LBE242:
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1294              		.loc 1 646 0
 1295 04f2 434B     		ldr	r3, .L133+4
 1296 04f4 1968     		ldr	r1, [r3]
 1297              	.LVL123:
 1298              	.LBB244:
 1299              	.LBB245:
 1300              		.loc 2 531 0
 1301 04f6 4FF00073 		mov	r3, #33554432
 1302              		.syntax unified
 1303              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1304 04fa 93FAA3F3 		rbit r3, r3
 1305              	@ 0 "" 2
 1306              	.LVL124:
 1307              		.thumb
 1308              		.syntax unified
 1309              	.LBE245:
 1310              	.LBE244:
 1311              		.loc 1 646 0
 1312 04fe B3FA83F3 		clz	r3, r3
 1313 0502 03F01F03 		and	r3, r3, #31
 1314 0506 0122     		movs	r2, #1
 1315 0508 02FA03F3 		lsl	r3, r2, r3
 1316 050c 1942     		tst	r1, r3
 1317 050e 71D0     		beq	.L128
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1318              		.loc 1 648 0
 1319 0510 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccDUHHvc.s 			page 46


 1320              	.LVL125:
 1321 0514 001B     		subs	r0, r0, r4
 1322 0516 0228     		cmp	r0, #2
 1323 0518 E7D9     		bls	.L89
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1324              		.loc 1 650 0
 1325 051a 0320     		movs	r0, #3
 1326 051c 7BE0     		b	.L21
 1327              	.LVL126:
 1328              	.L126:
 1329              	.LBB246:
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1330              		.loc 1 576 0
 1331 051e 384A     		ldr	r2, .L133+4
 1332 0520 D369     		ldr	r3, [r2, #28]
 1333 0522 23F08053 		bic	r3, r3, #268435456
 1334 0526 D361     		str	r3, [r2, #28]
 1335 0528 C2E7     		b	.L61
 1336              	.LVL127:
 1337              	.L127:
 1338              	.LBE246:
 1339              	.LBB247:
 1340              	.LBB248:
 1341              		.loc 2 531 0
 1342 052a 4FF08073 		mov	r3, #16777216
 1343              		.syntax unified
 1344              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1345 052e 93FAA3F3 		rbit r3, r3
 1346              	@ 0 "" 2
 1347              	.LVL128:
 1348              		.thumb
 1349              		.syntax unified
 1350              	.LBE248:
 1351              	.LBE247:
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1352              		.loc 1 598 0
 1353 0532 B3FA83F3 		clz	r3, r3
 1354 0536 03F18453 		add	r3, r3, #276824064
 1355 053a 03F58413 		add	r3, r3, #1081344
 1356 053e 9B00     		lsls	r3, r3, #2
 1357 0540 0022     		movs	r2, #0
 1358 0542 1A60     		str	r2, [r3]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1359              		.loc 1 601 0
 1360 0544 FFF7FEFF 		bl	HAL_GetTick
 1361              	.LVL129:
 1362 0548 0546     		mov	r5, r0
 1363              	.LVL130:
 1364              	.L81:
 1365              	.LBB249:
 1366              	.LBB250:
 1367              		.loc 2 531 0
 1368 054a 4FF00073 		mov	r3, #33554432
 1369              		.syntax unified
 1370              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1371 054e 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccDUHHvc.s 			page 47


 1372              	@ 0 "" 2
 1373              	.LVL131:
 1374              		.thumb
 1375              		.syntax unified
 1376              	.LBE250:
 1377              	.LBE249:
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1378              		.loc 1 604 0
 1379 0552 2B4B     		ldr	r3, .L133+4
 1380 0554 1968     		ldr	r1, [r3]
 1381              	.LVL132:
 1382              	.LBB251:
 1383              	.LBB252:
 1384              		.loc 2 531 0
 1385 0556 4FF00073 		mov	r3, #33554432
 1386              		.syntax unified
 1387              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1388 055a 93FAA3F3 		rbit r3, r3
 1389              	@ 0 "" 2
 1390              	.LVL133:
 1391              		.thumb
 1392              		.syntax unified
 1393              	.LBE252:
 1394              	.LBE251:
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1395              		.loc 1 604 0
 1396 055e B3FA83F3 		clz	r3, r3
 1397 0562 03F01F03 		and	r3, r3, #31
 1398 0566 0122     		movs	r2, #1
 1399 0568 02FA03F3 		lsl	r3, r2, r3
 1400 056c 1942     		tst	r1, r3
 1401 056e 06D0     		beq	.L129
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1402              		.loc 1 606 0
 1403 0570 FFF7FEFF 		bl	HAL_GetTick
 1404              	.LVL134:
 1405 0574 401B     		subs	r0, r0, r5
 1406 0576 0228     		cmp	r0, #2
 1407 0578 E7D9     		bls	.L81
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1408              		.loc 1 608 0
 1409 057a 0320     		movs	r0, #3
 1410 057c 4BE0     		b	.L21
 1411              	.L129:
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1412              		.loc 1 614 0
 1413 057e 204A     		ldr	r2, .L133+4
 1414 0580 D36A     		ldr	r3, [r2, #44]
 1415 0582 23F00F03 		bic	r3, r3, #15
 1416 0586 616A     		ldr	r1, [r4, #36]
 1417 0588 0B43     		orrs	r3, r3, r1
 1418 058a D362     		str	r3, [r2, #44]
 1419 058c 5368     		ldr	r3, [r2, #4]
 1420 058e 23F47613 		bic	r3, r3, #4030464
 1421 0592 216A     		ldr	r1, [r4, #32]
 1422 0594 E069     		ldr	r0, [r4, #28]
 1423 0596 0143     		orrs	r1, r1, r0
ARM GAS  /tmp/ccDUHHvc.s 			page 48


 1424 0598 0B43     		orrs	r3, r3, r1
 1425 059a 5360     		str	r3, [r2, #4]
 1426              	.LVL135:
 1427              	.LBB253:
 1428              	.LBB254:
 1429              		.loc 2 531 0
 1430 059c 4FF08073 		mov	r3, #16777216
 1431              		.syntax unified
 1432              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1433 05a0 93FAA3F3 		rbit r3, r3
 1434              	@ 0 "" 2
 1435              	.LVL136:
 1436              		.thumb
 1437              		.syntax unified
 1438              	.LBE254:
 1439              	.LBE253:
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1440              		.loc 1 623 0
 1441 05a4 B3FA83F3 		clz	r3, r3
 1442 05a8 03F18453 		add	r3, r3, #276824064
 1443 05ac 03F58413 		add	r3, r3, #1081344
 1444 05b0 9B00     		lsls	r3, r3, #2
 1445 05b2 0122     		movs	r2, #1
 1446 05b4 1A60     		str	r2, [r3]
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1447              		.loc 1 626 0
 1448 05b6 FFF7FEFF 		bl	HAL_GetTick
 1449              	.LVL137:
 1450 05ba 0446     		mov	r4, r0
 1451              	.LVL138:
 1452              	.L85:
 1453              	.LBB255:
 1454              	.LBB256:
 1455              		.loc 2 531 0
 1456 05bc 4FF00073 		mov	r3, #33554432
 1457              		.syntax unified
 1458              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1459 05c0 93FAA3F3 		rbit r3, r3
 1460              	@ 0 "" 2
 1461              	.LVL139:
 1462              		.thumb
 1463              		.syntax unified
 1464              	.LBE256:
 1465              	.LBE255:
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1466              		.loc 1 629 0
 1467 05c4 0E4B     		ldr	r3, .L133+4
 1468 05c6 1968     		ldr	r1, [r3]
 1469              	.LVL140:
 1470              	.LBB257:
 1471              	.LBB258:
 1472              		.loc 2 531 0
 1473 05c8 4FF00073 		mov	r3, #33554432
 1474              		.syntax unified
 1475              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1476 05cc 93FAA3F3 		rbit r3, r3
 1477              	@ 0 "" 2
ARM GAS  /tmp/ccDUHHvc.s 			page 49


 1478              	.LVL141:
 1479              		.thumb
 1480              		.syntax unified
 1481              	.LBE258:
 1482              	.LBE257:
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1483              		.loc 1 629 0
 1484 05d0 B3FA83F3 		clz	r3, r3
 1485 05d4 03F01F03 		and	r3, r3, #31
 1486 05d8 0122     		movs	r2, #1
 1487 05da 02FA03F3 		lsl	r3, r2, r3
 1488 05de 1942     		tst	r1, r3
 1489 05e0 06D1     		bne	.L130
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1490              		.loc 1 631 0
 1491 05e2 FFF7FEFF 		bl	HAL_GetTick
 1492              	.LVL142:
 1493 05e6 001B     		subs	r0, r0, r4
 1494 05e8 0228     		cmp	r0, #2
 1495 05ea E7D9     		bls	.L85
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1496              		.loc 1 633 0
 1497 05ec 0320     		movs	r0, #3
 1498 05ee 12E0     		b	.L21
 1499              	.L130:
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1500              		.loc 1 661 0
 1501 05f0 0020     		movs	r0, #0
 1502 05f2 10E0     		b	.L21
 1503              	.L128:
 1504 05f4 0020     		movs	r0, #0
 1505 05f6 0EE0     		b	.L21
 1506              	.LVL143:
 1507              	.L93:
 1508              	.LCFI3:
 1509              		.cfi_def_cfa_offset 0
 1510              		.cfi_restore 4
 1511              		.cfi_restore 5
 1512              		.cfi_restore 6
 1513              		.cfi_restore 14
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1514              		.loc 1 339 0
 1515 05f8 0120     		movs	r0, #1
 1516              	.LVL144:
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1517              		.loc 1 662 0
 1518 05fa 7047     		bx	lr
ARM GAS  /tmp/ccDUHHvc.s 			page 50


 1519              	.L134:
 1520              		.align	2
 1521              	.L133:
 1522 05fc 20819010 		.word	277905696
 1523 0600 00100240 		.word	1073876992
 1524 0604 00700040 		.word	1073770496
 1525              	.LVL145:
 1526              	.L117:
 1527              	.LCFI4:
 1528              		.cfi_def_cfa_offset 24
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 14, -4
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1533              		.loc 1 357 0
 1534 0608 0120     		movs	r0, #1
 1535              	.LVL146:
 1536 060a 04E0     		b	.L21
 1537              	.LVL147:
 1538              	.L104:
 1539              	.LBB259:
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1540              		.loc 1 554 0
 1541 060c 0320     		movs	r0, #3
 1542 060e 02E0     		b	.L21
 1543              	.L105:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1544              		.loc 1 568 0
 1545 0610 0320     		movs	r0, #3
 1546 0612 00E0     		b	.L21
 1547              	.LVL148:
 1548              	.L106:
 1549              	.LBE259:
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1550              		.loc 1 661 0
 1551 0614 0020     		movs	r0, #0
 1552              	.LVL149:
 1553              	.L21:
 1554              		.loc 1 662 0
 1555 0616 02B0     		add	sp, sp, #8
 1556              	.LCFI5:
 1557              		.cfi_remember_state
 1558              		.cfi_def_cfa_offset 16
 1559              		@ sp needed
 1560 0618 70BD     		pop	{r4, r5, r6, pc}
 1561              	.LVL150:
 1562              	.L107:
 1563              	.LCFI6:
 1564              		.cfi_restore_state
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1565              		.loc 1 657 0
 1566 061a 0120     		movs	r0, #1
 1567 061c FBE7     		b	.L21
 1568              		.cfi_endproc
 1569              	.LFE127:
 1571 061e 00BF     		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
ARM GAS  /tmp/ccDUHHvc.s 			page 51


 1572              		.align	1
 1573              		.global	HAL_RCC_MCOConfig
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1577              		.fpu fpv4-sp-d16
 1579              	HAL_RCC_MCOConfig:
 1580              	.LFB129:
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
ARM GAS  /tmp/ccDUHHvc.s 			page 52


 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/ccDUHHvc.s 			page 53


 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/ccDUHHvc.s 			page 54


 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1581              		.loc 1 880 0
 1582              		.cfi_startproc
ARM GAS  /tmp/ccDUHHvc.s 			page 55


 1583              		@ args = 0, pretend = 0, frame = 24
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              	.LVL151:
 1586 0000 70B5     		push	{r4, r5, r6, lr}
 1587              	.LCFI7:
 1588              		.cfi_def_cfa_offset 16
 1589              		.cfi_offset 4, -16
 1590              		.cfi_offset 5, -12
 1591              		.cfi_offset 6, -8
 1592              		.cfi_offset 14, -4
 1593 0002 86B0     		sub	sp, sp, #24
 1594              	.LCFI8:
 1595              		.cfi_def_cfa_offset 40
 1596 0004 0D46     		mov	r5, r1
 1597 0006 1646     		mov	r6, r2
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1598              		.loc 1 889 0
 1599 0008 0223     		movs	r3, #2
 1600 000a 0293     		str	r3, [sp, #8]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1601              		.loc 1 890 0
 1602 000c 0323     		movs	r3, #3
 1603 000e 0493     		str	r3, [sp, #16]
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1604              		.loc 1 891 0
 1605 0010 0023     		movs	r3, #0
 1606 0012 0393     		str	r3, [sp, #12]
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1607              		.loc 1 892 0
 1608 0014 4FF48072 		mov	r2, #256
 1609              	.LVL152:
 1610 0018 0192     		str	r2, [sp, #4]
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1611              		.loc 1 893 0
 1612 001a 0593     		str	r3, [sp, #20]
 1613              	.LBB260:
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1614              		.loc 1 896 0
 1615 001c 0B4C     		ldr	r4, .L137
 1616 001e 6369     		ldr	r3, [r4, #20]
 1617 0020 43F40033 		orr	r3, r3, #131072
 1618 0024 6361     		str	r3, [r4, #20]
 1619 0026 6369     		ldr	r3, [r4, #20]
 1620 0028 03F40033 		and	r3, r3, #131072
 1621 002c 0093     		str	r3, [sp]
 1622 002e 009B     		ldr	r3, [sp]
 1623              	.LBE260:
ARM GAS  /tmp/ccDUHHvc.s 			page 56


 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1624              		.loc 1 898 0
 1625 0030 01A9     		add	r1, sp, #4
 1626              	.LVL153:
 1627 0032 4FF09040 		mov	r0, #1207959552
 1628              	.LVL154:
 1629 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1630              	.LVL155:
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1631              		.loc 1 901 0
 1632 003a 6268     		ldr	r2, [r4, #4]
 1633 003c 22F0EE42 		bic	r2, r2, #1996488704
 1634 0040 3543     		orrs	r5, r5, r6
 1635              	.LVL156:
 1636 0042 2A43     		orrs	r2, r2, r5
 1637 0044 6260     		str	r2, [r4, #4]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1638              		.loc 1 902 0
 1639 0046 06B0     		add	sp, sp, #24
 1640              	.LCFI9:
 1641              		.cfi_def_cfa_offset 16
 1642              		@ sp needed
 1643 0048 70BD     		pop	{r4, r5, r6, pc}
 1644              	.LVL157:
 1645              	.L138:
 1646 004a 00BF     		.align	2
 1647              	.L137:
 1648 004c 00100240 		.word	1073876992
 1649              		.cfi_endproc
 1650              	.LFE129:
 1652              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1653              		.align	1
 1654              		.global	HAL_RCC_EnableCSS
 1655              		.syntax unified
 1656              		.thumb
 1657              		.thumb_func
 1658              		.fpu fpv4-sp-d16
 1660              	HAL_RCC_EnableCSS:
 1661              	.LFB130:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1662              		.loc 1 914 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccDUHHvc.s 			page 57


 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666              		@ link register save eliminated.
 1667              	.LVL158:
 1668              	.LBB261:
 1669              	.LBB262:
 1670              		.loc 2 531 0
 1671 0000 4FF40023 		mov	r3, #524288
 1672              		.syntax unified
 1673              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1674 0004 93FAA3F3 		rbit r3, r3
 1675              	@ 0 "" 2
 1676              	.LVL159:
 1677              		.thumb
 1678              		.syntax unified
 1679              	.LBE262:
 1680              	.LBE261:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1681              		.loc 1 915 0
 1682 0008 B3FA83F3 		clz	r3, r3
 1683 000c 03F18453 		add	r3, r3, #276824064
 1684 0010 03F58413 		add	r3, r3, #1081344
 1685 0014 9B00     		lsls	r3, r3, #2
 1686 0016 0122     		movs	r2, #1
 1687 0018 1A60     		str	r2, [r3]
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1688              		.loc 1 916 0
 1689 001a 7047     		bx	lr
 1690              		.cfi_endproc
 1691              	.LFE130:
 1693              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1694              		.align	1
 1695              		.global	HAL_RCC_DisableCSS
 1696              		.syntax unified
 1697              		.thumb
 1698              		.thumb_func
 1699              		.fpu fpv4-sp-d16
 1701              	HAL_RCC_DisableCSS:
 1702              	.LFB131:
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1703              		.loc 1 923 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
 1708              	.LVL160:
 1709              	.LBB263:
 1710              	.LBB264:
 1711              		.loc 2 531 0
 1712 0000 4FF40023 		mov	r3, #524288
 1713              		.syntax unified
 1714              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccDUHHvc.s 			page 58


 1715 0004 93FAA3F3 		rbit r3, r3
 1716              	@ 0 "" 2
 1717              	.LVL161:
 1718              		.thumb
 1719              		.syntax unified
 1720              	.LBE264:
 1721              	.LBE263:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1722              		.loc 1 924 0
 1723 0008 B3FA83F3 		clz	r3, r3
 1724 000c 03F18453 		add	r3, r3, #276824064
 1725 0010 03F58413 		add	r3, r3, #1081344
 1726 0014 9B00     		lsls	r3, r3, #2
 1727 0016 0022     		movs	r2, #0
 1728 0018 1A60     		str	r2, [r3]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1729              		.loc 1 925 0
 1730 001a 7047     		bx	lr
 1731              		.cfi_endproc
 1732              	.LFE131:
 1734              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1735              		.align	1
 1736              		.global	HAL_RCC_GetSysClockFreq
 1737              		.syntax unified
 1738              		.thumb
 1739              		.thumb_func
 1740              		.fpu fpv4-sp-d16
 1742              	HAL_RCC_GetSysClockFreq:
 1743              	.LFB132:
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
ARM GAS  /tmp/ccDUHHvc.s 			page 59


 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1744              		.loc 1 957 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 0, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
 1749              	.LVL162:
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1750              		.loc 1 961 0
 1751 0000 194B     		ldr	r3, .L148
 1752 0002 5B68     		ldr	r3, [r3, #4]
 1753              	.LVL163:
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1754              		.loc 1 964 0
 1755 0004 03F00C02 		and	r2, r3, #12
 1756 0008 042A     		cmp	r2, #4
 1757 000a 03D0     		beq	.L143
 1758 000c 082A     		cmp	r2, #8
 1759 000e 03D0     		beq	.L144
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
ARM GAS  /tmp/ccDUHHvc.s 			page 60


 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1760              		.loc 1 1004 0
 1761 0010 1648     		ldr	r0, .L148+4
 1762              	.LVL164:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1763              		.loc 1 1009 0
 1764 0012 7047     		bx	lr
 1765              	.LVL165:
 1766              	.L143:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1767              		.loc 1 968 0
 1768 0014 1648     		ldr	r0, .L148+8
 1769 0016 7047     		bx	lr
 1770              	.L144:
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1771              		.loc 1 973 0
 1772 0018 03F47011 		and	r1, r3, #3932160
 1773              	.LVL166:
 1774              	.LBB265:
 1775              	.LBB266:
 1776              		.loc 2 531 0
 1777 001c 4FF47012 		mov	r2, #3932160
 1778              		.syntax unified
 1779              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1780 0020 92FAA2F2 		rbit r2, r2
 1781              	@ 0 "" 2
 1782              	.LVL167:
 1783              		.thumb
 1784              		.syntax unified
 1785              	.LBE266:
 1786              	.LBE265:
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1787              		.loc 1 973 0
 1788 0024 B2FA82F2 		clz	r2, r2
 1789 0028 21FA02F2 		lsr	r2, r1, r2
 1790 002c 1149     		ldr	r1, .L148+12
 1791 002e 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1792              	.LVL168:
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 1793              		.loc 1 974 0
 1794 0030 0D4A     		ldr	r2, .L148
 1795 0032 D26A     		ldr	r2, [r2, #44]
 1796 0034 02F00F02 		and	r2, r2, #15
 1797              	.LVL169:
ARM GAS  /tmp/ccDUHHvc.s 			page 61


 1798              	.LBB267:
 1799              	.LBB268:
 1800              		.loc 2 531 0
 1801 0038 0F21     		movs	r1, #15
 1802              		.syntax unified
 1803              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1804 003a 91FAA1F1 		rbit r1, r1
 1805              	@ 0 "" 2
 1806              	.LVL170:
 1807              		.thumb
 1808              		.syntax unified
 1809              	.LBE268:
 1810              	.LBE267:
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 1811              		.loc 1 974 0
 1812 003e B1FA81F1 		clz	r1, r1
 1813 0042 CA40     		lsrs	r2, r2, r1
 1814 0044 0C49     		ldr	r1, .L148+16
 1815 0046 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1816              	.LVL171:
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1817              		.loc 1 987 0
 1818 0048 13F4803F 		tst	r3, #65536
 1819 004c 05D0     		beq	.L145
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1820              		.loc 1 990 0
 1821 004e 084B     		ldr	r3, .L148+8
 1822              	.LVL172:
 1823 0050 B3FBF2F2 		udiv	r2, r3, r2
 1824              	.LVL173:
 1825 0054 00FB02F0 		mul	r0, r0, r2
 1826              	.LVL174:
 1827 0058 7047     		bx	lr
 1828              	.LVL175:
 1829              	.L145:
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1830              		.loc 1 995 0
 1831 005a 044B     		ldr	r3, .L148+4
 1832              	.LVL176:
 1833 005c B3FBF2F2 		udiv	r2, r3, r2
 1834              	.LVL177:
 1835 0060 00FB02F0 		mul	r0, r0, r2
 1836              	.LVL178:
 1837 0064 7047     		bx	lr
 1838              	.L149:
 1839 0066 00BF     		.align	2
 1840              	.L148:
 1841 0068 00100240 		.word	1073876992
 1842 006c 00127A00 		.word	8000000
 1843 0070 0024F400 		.word	16000000
 1844 0074 00000000 		.word	.LANCHOR0
 1845 0078 00000000 		.word	.LANCHOR1
 1846              		.cfi_endproc
 1847              	.LFE132:
 1849              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1850              		.align	1
 1851              		.global	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccDUHHvc.s 			page 62


 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
 1857              	HAL_RCC_ClockConfig:
 1858              	.LFB128:
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1859              		.loc 1 688 0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863              	.LVL179:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1864              		.loc 1 692 0
 1865 0000 0028     		cmp	r0, #0
 1866 0002 00F0C080 		beq	.L169
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1867              		.loc 1 688 0
 1868 0006 70B5     		push	{r4, r5, r6, lr}
 1869              	.LCFI10:
 1870              		.cfi_def_cfa_offset 16
 1871              		.cfi_offset 4, -16
 1872              		.cfi_offset 5, -12
 1873              		.cfi_offset 6, -8
 1874              		.cfi_offset 14, -4
 1875 0008 0446     		mov	r4, r0
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1876              		.loc 1 706 0
 1877 000a 614B     		ldr	r3, .L182
 1878 000c 1B68     		ldr	r3, [r3]
 1879 000e 03F00703 		and	r3, r3, #7
 1880 0012 8B42     		cmp	r3, r1
 1881 0014 0CD2     		bcs	.L152
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1882              		.loc 1 709 0
 1883 0016 5E4A     		ldr	r2, .L182
 1884 0018 1368     		ldr	r3, [r2]
 1885 001a 23F00703 		bic	r3, r3, #7
 1886 001e 0B43     		orrs	r3, r3, r1
 1887 0020 1360     		str	r3, [r2]
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1888              		.loc 1 713 0
 1889 0022 1368     		ldr	r3, [r2]
 1890 0024 03F00703 		and	r3, r3, #7
 1891 0028 8B42     		cmp	r3, r1
 1892 002a 01D0     		beq	.L152
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1893              		.loc 1 715 0
 1894 002c 0120     		movs	r0, #1
 1895              	.LVL180:
 1896              	.L151:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1897              		.loc 1 807 0
 1898 002e 70BD     		pop	{r4, r5, r6, pc}
 1899              	.LVL181:
 1900              	.L152:
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccDUHHvc.s 			page 63


 1901              		.loc 1 720 0
 1902 0030 2368     		ldr	r3, [r4]
 1903 0032 13F0020F 		tst	r3, #2
 1904 0036 06D0     		beq	.L153
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1905              		.loc 1 723 0
 1906 0038 564A     		ldr	r2, .L182+4
 1907 003a 5368     		ldr	r3, [r2, #4]
 1908 003c 23F0F003 		bic	r3, r3, #240
 1909 0040 A068     		ldr	r0, [r4, #8]
 1910              	.LVL182:
 1911 0042 0343     		orrs	r3, r3, r0
 1912 0044 5360     		str	r3, [r2, #4]
 1913              	.L153:
 1914 0046 0D46     		mov	r5, r1
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1915              		.loc 1 727 0
 1916 0048 2368     		ldr	r3, [r4]
 1917 004a 13F0010F 		tst	r3, #1
 1918 004e 5AD0     		beq	.L154
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1919              		.loc 1 732 0
 1920 0050 6368     		ldr	r3, [r4, #4]
 1921 0052 012B     		cmp	r3, #1
 1922 0054 2DD0     		beq	.L180
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1923              		.loc 1 741 0
 1924 0056 022B     		cmp	r3, #2
 1925 0058 40D0     		beq	.L181
 1926              	.LVL183:
 1927              	.LBB269:
 1928              	.LBB270:
 1929              		.loc 2 531 0
 1930 005a 0222     		movs	r2, #2
 1931              		.syntax unified
 1932              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1933 005c 92FAA2F2 		rbit r2, r2
 1934              	@ 0 "" 2
 1935              	.LVL184:
 1936              		.thumb
 1937              		.syntax unified
 1938              	.LBE270:
 1939              	.LBE269:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1940              		.loc 1 753 0
 1941 0060 4C4A     		ldr	r2, .L182+4
 1942 0062 1068     		ldr	r0, [r2]
 1943              	.LVL185:
 1944              	.LBB271:
 1945              	.LBB272:
 1946              		.loc 2 531 0
 1947 0064 0222     		movs	r2, #2
 1948              		.syntax unified
 1949              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1950 0066 92FAA2F2 		rbit r2, r2
 1951              	@ 0 "" 2
 1952              	.LVL186:
ARM GAS  /tmp/ccDUHHvc.s 			page 64


 1953              		.thumb
 1954              		.syntax unified
 1955              	.LBE272:
 1956              	.LBE271:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1957              		.loc 1 753 0
 1958 006a B2FA82F2 		clz	r2, r2
 1959 006e 02F01F02 		and	r2, r2, #31
 1960 0072 0121     		movs	r1, #1
 1961              	.LVL187:
 1962 0074 01FA02F2 		lsl	r2, r1, r2
 1963 0078 1042     		tst	r0, r2
 1964 007a 00F08680 		beq	.L173
 1965              	.L158:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1966              		.loc 1 759 0
 1967 007e 4549     		ldr	r1, .L182+4
 1968 0080 4A68     		ldr	r2, [r1, #4]
 1969 0082 22F00302 		bic	r2, r2, #3
 1970 0086 1343     		orrs	r3, r3, r2
 1971 0088 4B60     		str	r3, [r1, #4]
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1972              		.loc 1 762 0
 1973 008a FFF7FEFF 		bl	HAL_GetTick
 1974              	.LVL188:
 1975 008e 0646     		mov	r6, r0
 1976              	.LVL189:
 1977              	.L164:
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1978              		.loc 1 764 0
 1979 0090 404B     		ldr	r3, .L182+4
 1980 0092 5B68     		ldr	r3, [r3, #4]
 1981 0094 03F00C03 		and	r3, r3, #12
 1982 0098 6268     		ldr	r2, [r4, #4]
 1983 009a B3EB820F 		cmp	r3, r2, lsl #2
 1984 009e 32D0     		beq	.L154
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1985              		.loc 1 766 0
 1986 00a0 FFF7FEFF 		bl	HAL_GetTick
 1987              	.LVL190:
 1988 00a4 801B     		subs	r0, r0, r6
 1989 00a6 41F28833 		movw	r3, #5000
 1990 00aa 9842     		cmp	r0, r3
 1991 00ac F0D9     		bls	.L164
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1992              		.loc 1 768 0
 1993 00ae 0320     		movs	r0, #3
 1994 00b0 BDE7     		b	.L151
 1995              	.LVL191:
 1996              	.L180:
 1997              	.LBB273:
 1998              	.LBB274:
 1999              		.loc 2 531 0
 2000 00b2 4FF40032 		mov	r2, #131072
 2001              		.syntax unified
 2002              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2003 00b6 92FAA2F2 		rbit r2, r2
ARM GAS  /tmp/ccDUHHvc.s 			page 65


 2004              	@ 0 "" 2
 2005              	.LVL192:
 2006              		.thumb
 2007              		.syntax unified
 2008              	.LBE274:
 2009              	.LBE273:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2010              		.loc 1 735 0
 2011 00ba 364A     		ldr	r2, .L182+4
 2012 00bc 1068     		ldr	r0, [r2]
 2013              	.LVL193:
 2014              	.LBB275:
 2015              	.LBB276:
 2016              		.loc 2 531 0
 2017 00be 4FF40032 		mov	r2, #131072
 2018              		.syntax unified
 2019              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2020 00c2 92FAA2F2 		rbit r2, r2
 2021              	@ 0 "" 2
 2022              	.LVL194:
 2023              		.thumb
 2024              		.syntax unified
 2025              	.LBE276:
 2026              	.LBE275:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2027              		.loc 1 735 0
 2028 00c6 B2FA82F2 		clz	r2, r2
 2029 00ca 02F01F02 		and	r2, r2, #31
 2030 00ce 0121     		movs	r1, #1
 2031              	.LVL195:
 2032 00d0 01FA02F2 		lsl	r2, r1, r2
 2033 00d4 0242     		tst	r2, r0
 2034 00d6 D2D1     		bne	.L158
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2035              		.loc 1 737 0
 2036 00d8 0120     		movs	r0, #1
 2037 00da A8E7     		b	.L151
 2038              	.LVL196:
 2039              	.L181:
 2040              	.LBB277:
 2041              	.LBB278:
 2042              		.loc 2 531 0
 2043 00dc 4FF00072 		mov	r2, #33554432
 2044              		.syntax unified
 2045              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2046 00e0 92FAA2F2 		rbit r2, r2
 2047              	@ 0 "" 2
 2048              	.LVL197:
 2049              		.thumb
 2050              		.syntax unified
 2051              	.LBE278:
 2052              	.LBE277:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2053              		.loc 1 744 0
 2054 00e4 2B4A     		ldr	r2, .L182+4
 2055 00e6 1068     		ldr	r0, [r2]
 2056              	.LVL198:
ARM GAS  /tmp/ccDUHHvc.s 			page 66


 2057              	.LBB279:
 2058              	.LBB280:
 2059              		.loc 2 531 0
 2060 00e8 4FF00072 		mov	r2, #33554432
 2061              		.syntax unified
 2062              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2063 00ec 92FAA2F2 		rbit r2, r2
 2064              	@ 0 "" 2
 2065              	.LVL199:
 2066              		.thumb
 2067              		.syntax unified
 2068              	.LBE280:
 2069              	.LBE279:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2070              		.loc 1 744 0
 2071 00f0 B2FA82F2 		clz	r2, r2
 2072 00f4 02F01F02 		and	r2, r2, #31
 2073 00f8 0121     		movs	r1, #1
 2074              	.LVL200:
 2075 00fa 01FA02F2 		lsl	r2, r1, r2
 2076 00fe 1042     		tst	r0, r2
 2077 0100 BDD1     		bne	.L158
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2078              		.loc 1 746 0
 2079 0102 0120     		movs	r0, #1
 2080 0104 93E7     		b	.L151
 2081              	.LVL201:
 2082              	.L154:
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 2083              		.loc 1 773 0
 2084 0106 224B     		ldr	r3, .L182
 2085 0108 1B68     		ldr	r3, [r3]
 2086 010a 03F00703 		and	r3, r3, #7
 2087 010e AB42     		cmp	r3, r5
 2088 0110 0CD9     		bls	.L166
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2089              		.loc 1 776 0
 2090 0112 1F4A     		ldr	r2, .L182
 2091 0114 1368     		ldr	r3, [r2]
 2092 0116 23F00703 		bic	r3, r3, #7
 2093 011a 2B43     		orrs	r3, r3, r5
 2094 011c 1360     		str	r3, [r2]
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2095              		.loc 1 780 0
 2096 011e 1368     		ldr	r3, [r2]
 2097 0120 03F00703 		and	r3, r3, #7
 2098 0124 AB42     		cmp	r3, r5
 2099 0126 01D0     		beq	.L166
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2100              		.loc 1 782 0
 2101 0128 0120     		movs	r0, #1
 2102 012a 80E7     		b	.L151
 2103              	.L166:
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2104              		.loc 1 787 0
 2105 012c 2368     		ldr	r3, [r4]
 2106 012e 13F0040F 		tst	r3, #4
ARM GAS  /tmp/ccDUHHvc.s 			page 67


 2107 0132 06D0     		beq	.L167
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2108              		.loc 1 790 0
 2109 0134 174A     		ldr	r2, .L182+4
 2110 0136 5368     		ldr	r3, [r2, #4]
 2111 0138 23F4E063 		bic	r3, r3, #1792
 2112 013c E168     		ldr	r1, [r4, #12]
 2113 013e 0B43     		orrs	r3, r3, r1
 2114 0140 5360     		str	r3, [r2, #4]
 2115              	.L167:
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2116              		.loc 1 794 0
 2117 0142 2368     		ldr	r3, [r4]
 2118 0144 13F0080F 		tst	r3, #8
 2119 0148 07D0     		beq	.L168
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2120              		.loc 1 797 0
 2121 014a 124A     		ldr	r2, .L182+4
 2122 014c 5368     		ldr	r3, [r2, #4]
 2123 014e 23F46053 		bic	r3, r3, #14336
 2124 0152 2169     		ldr	r1, [r4, #16]
 2125 0154 43EAC103 		orr	r3, r3, r1, lsl #3
 2126 0158 5360     		str	r3, [r2, #4]
 2127              	.L168:
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2128              		.loc 1 801 0
 2129 015a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2130              	.LVL202:
 2131 015e 0D4B     		ldr	r3, .L182+4
 2132 0160 5B68     		ldr	r3, [r3, #4]
 2133 0162 03F0F003 		and	r3, r3, #240
 2134              	.LVL203:
 2135              	.LBB281:
 2136              	.LBB282:
 2137              		.loc 2 531 0
 2138 0166 F022     		movs	r2, #240
 2139              		.syntax unified
 2140              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2141 0168 92FAA2F2 		rbit r2, r2
 2142              	@ 0 "" 2
 2143              	.LVL204:
 2144              		.thumb
 2145              		.syntax unified
 2146              	.LBE282:
 2147              	.LBE281:
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2148              		.loc 1 801 0
 2149 016c B2FA82F2 		clz	r2, r2
 2150 0170 D340     		lsrs	r3, r3, r2
 2151 0172 094A     		ldr	r2, .L182+8
 2152 0174 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2153 0176 D840     		lsrs	r0, r0, r3
 2154 0178 084B     		ldr	r3, .L182+12
 2155 017a 1860     		str	r0, [r3]
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2156              		.loc 1 804 0
 2157 017c 0020     		movs	r0, #0
ARM GAS  /tmp/ccDUHHvc.s 			page 68


 2158 017e FFF7FEFF 		bl	HAL_InitTick
 2159              	.LVL205:
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2160              		.loc 1 806 0
 2161 0182 0020     		movs	r0, #0
 2162 0184 53E7     		b	.L151
 2163              	.LVL206:
 2164              	.L169:
 2165              	.LCFI11:
 2166              		.cfi_def_cfa_offset 0
 2167              		.cfi_restore 4
 2168              		.cfi_restore 5
 2169              		.cfi_restore 6
 2170              		.cfi_restore 14
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2171              		.loc 1 694 0
 2172 0186 0120     		movs	r0, #1
 2173              	.LVL207:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2174              		.loc 1 807 0
 2175 0188 7047     		bx	lr
 2176              	.LVL208:
 2177              	.L173:
 2178              	.LCFI12:
 2179              		.cfi_def_cfa_offset 16
 2180              		.cfi_offset 4, -16
 2181              		.cfi_offset 5, -12
 2182              		.cfi_offset 6, -8
 2183              		.cfi_offset 14, -4
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2184              		.loc 1 755 0
 2185 018a 0120     		movs	r0, #1
 2186 018c 4FE7     		b	.L151
 2187              	.L183:
 2188 018e 00BF     		.align	2
 2189              	.L182:
 2190 0190 00200240 		.word	1073881088
 2191 0194 00100240 		.word	1073876992
 2192 0198 00000000 		.word	AHBPrescTable
 2193 019c 00000000 		.word	SystemCoreClock
 2194              		.cfi_endproc
 2195              	.LFE128:
 2197              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2198              		.align	1
 2199              		.global	HAL_RCC_GetHCLKFreq
 2200              		.syntax unified
 2201              		.thumb
 2202              		.thumb_func
 2203              		.fpu fpv4-sp-d16
 2205              	HAL_RCC_GetHCLKFreq:
 2206              	.LFB133:
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
ARM GAS  /tmp/ccDUHHvc.s 			page 69


1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2207              		.loc 1 1021 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 0
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211              		@ link register save eliminated.
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2212              		.loc 1 1023 0
 2213 0000 014B     		ldr	r3, .L185
 2214 0002 1868     		ldr	r0, [r3]
 2215 0004 7047     		bx	lr
 2216              	.L186:
 2217 0006 00BF     		.align	2
 2218              	.L185:
 2219 0008 00000000 		.word	SystemCoreClock
 2220              		.cfi_endproc
 2221              	.LFE133:
 2223              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2224              		.align	1
 2225              		.global	HAL_RCC_GetPCLK1Freq
 2226              		.syntax unified
 2227              		.thumb
 2228              		.thumb_func
 2229              		.fpu fpv4-sp-d16
 2231              	HAL_RCC_GetPCLK1Freq:
 2232              	.LFB134:
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2233              		.loc 1 1032 0
 2234              		.cfi_startproc
 2235              		@ args = 0, pretend = 0, frame = 0
 2236              		@ frame_needed = 0, uses_anonymous_args = 0
 2237 0000 08B5     		push	{r3, lr}
 2238              	.LCFI13:
 2239              		.cfi_def_cfa_offset 8
 2240              		.cfi_offset 3, -8
 2241              		.cfi_offset 14, -4
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2242              		.loc 1 1034 0
 2243 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2244              	.LVL209:
 2245 0006 074B     		ldr	r3, .L189
 2246 0008 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccDUHHvc.s 			page 70


 2247 000a 03F4E063 		and	r3, r3, #1792
 2248              	.LVL210:
 2249              	.LBB283:
 2250              	.LBB284:
 2251              		.loc 2 531 0
 2252 000e 4FF4E062 		mov	r2, #1792
 2253              		.syntax unified
 2254              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2255 0012 92FAA2F2 		rbit r2, r2
 2256              	@ 0 "" 2
 2257              	.LVL211:
 2258              		.thumb
 2259              		.syntax unified
 2260              	.LBE284:
 2261              	.LBE283:
 2262              		.loc 1 1034 0
 2263 0016 B2FA82F2 		clz	r2, r2
 2264 001a D340     		lsrs	r3, r3, r2
 2265 001c 024A     		ldr	r2, .L189+4
 2266 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2267              		.loc 1 1035 0
 2268 0020 D840     		lsrs	r0, r0, r3
 2269 0022 08BD     		pop	{r3, pc}
 2270              	.L190:
 2271              		.align	2
 2272              	.L189:
 2273 0024 00100240 		.word	1073876992
 2274 0028 00000000 		.word	APBPrescTable
 2275              		.cfi_endproc
 2276              	.LFE134:
 2278              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2279              		.align	1
 2280              		.global	HAL_RCC_GetPCLK2Freq
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2284              		.fpu fpv4-sp-d16
 2286              	HAL_RCC_GetPCLK2Freq:
 2287              	.LFB135:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2288              		.loc 1 1044 0
 2289              		.cfi_startproc
 2290              		@ args = 0, pretend = 0, frame = 0
 2291              		@ frame_needed = 0, uses_anonymous_args = 0
 2292 0000 08B5     		push	{r3, lr}
 2293              	.LCFI14:
 2294              		.cfi_def_cfa_offset 8
 2295              		.cfi_offset 3, -8
ARM GAS  /tmp/ccDUHHvc.s 			page 71


 2296              		.cfi_offset 14, -4
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2297              		.loc 1 1046 0
 2298 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2299              	.LVL212:
 2300 0006 074B     		ldr	r3, .L193
 2301 0008 5B68     		ldr	r3, [r3, #4]
 2302 000a 03F46053 		and	r3, r3, #14336
 2303              	.LVL213:
 2304              	.LBB285:
 2305              	.LBB286:
 2306              		.loc 2 531 0
 2307 000e 4FF46052 		mov	r2, #14336
 2308              		.syntax unified
 2309              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2310 0012 92FAA2F2 		rbit r2, r2
 2311              	@ 0 "" 2
 2312              	.LVL214:
 2313              		.thumb
 2314              		.syntax unified
 2315              	.LBE286:
 2316              	.LBE285:
 2317              		.loc 1 1046 0
 2318 0016 B2FA82F2 		clz	r2, r2
 2319 001a D340     		lsrs	r3, r3, r2
 2320 001c 024A     		ldr	r2, .L193+4
 2321 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2322              		.loc 1 1047 0
 2323 0020 D840     		lsrs	r0, r0, r3
 2324 0022 08BD     		pop	{r3, pc}
 2325              	.L194:
 2326              		.align	2
 2327              	.L193:
 2328 0024 00100240 		.word	1073876992
 2329 0028 00000000 		.word	APBPrescTable
 2330              		.cfi_endproc
 2331              	.LFE135:
 2333              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2334              		.align	1
 2335              		.global	HAL_RCC_GetOscConfig
 2336              		.syntax unified
 2337              		.thumb
 2338              		.thumb_func
 2339              		.fpu fpv4-sp-d16
 2341              	HAL_RCC_GetOscConfig:
 2342              	.LFB136:
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
ARM GAS  /tmp/ccDUHHvc.s 			page 72


1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2343              		.loc 1 1057 0
 2344              		.cfi_startproc
 2345              		@ args = 0, pretend = 0, frame = 0
 2346              		@ frame_needed = 0, uses_anonymous_args = 0
 2347              		@ link register save eliminated.
 2348              	.LVL215:
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2349              		.loc 1 1062 0
 2350 0000 0F23     		movs	r3, #15
 2351 0002 0360     		str	r3, [r0]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2352              		.loc 1 1067 0
 2353 0004 2D4B     		ldr	r3, .L209
 2354 0006 1B68     		ldr	r3, [r3]
 2355 0008 13F4802F 		tst	r3, #262144
 2356 000c 36D0     		beq	.L196
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2357              		.loc 1 1069 0
 2358 000e 4FF4A023 		mov	r3, #327680
 2359 0012 4360     		str	r3, [r0, #4]
 2360              	.L197:
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2361              		.loc 1 1084 0
 2362 0014 294B     		ldr	r3, .L209
 2363 0016 1B68     		ldr	r3, [r3]
 2364 0018 13F0010F 		tst	r3, #1
 2365 001c 3AD0     		beq	.L199
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2366              		.loc 1 1086 0
 2367 001e 0123     		movs	r3, #1
 2368 0020 C360     		str	r3, [r0, #12]
 2369              	.L200:
ARM GAS  /tmp/ccDUHHvc.s 			page 73


1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2370              		.loc 1 1093 0
 2371 0022 2649     		ldr	r1, .L209
 2372 0024 0B68     		ldr	r3, [r1]
 2373 0026 03F0F803 		and	r3, r3, #248
 2374              	.LVL216:
 2375              	.LBB287:
 2376              	.LBB288:
 2377              		.loc 2 531 0
 2378 002a F822     		movs	r2, #248
 2379              		.syntax unified
 2380              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2381 002c 92FAA2F2 		rbit r2, r2
 2382              	@ 0 "" 2
 2383              	.LVL217:
 2384              		.thumb
 2385              		.syntax unified
 2386              	.LBE288:
 2387              	.LBE287:
 2388              		.loc 1 1093 0
 2389 0030 B2FA82F2 		clz	r2, r2
 2390 0034 D340     		lsrs	r3, r3, r2
 2391 0036 0361     		str	r3, [r0, #16]
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2392              		.loc 1 1096 0
 2393 0038 0B6A     		ldr	r3, [r1, #32]
 2394 003a 13F0040F 		tst	r3, #4
 2395 003e 2CD0     		beq	.L201
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2396              		.loc 1 1098 0
 2397 0040 0523     		movs	r3, #5
 2398 0042 8360     		str	r3, [r0, #8]
 2399              	.L202:
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2400              		.loc 1 1110 0
 2401 0044 1D4B     		ldr	r3, .L209
 2402 0046 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccDUHHvc.s 			page 74


 2403 0048 13F0010F 		tst	r3, #1
 2404 004c 30D0     		beq	.L204
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2405              		.loc 1 1112 0
 2406 004e 0123     		movs	r3, #1
 2407 0050 4361     		str	r3, [r0, #20]
 2408              	.L205:
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2409              		.loc 1 1121 0
 2410 0052 1A4B     		ldr	r3, .L209
 2411 0054 1B68     		ldr	r3, [r3]
 2412 0056 13F0807F 		tst	r3, #16777216
 2413 005a 2CD1     		bne	.L208
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2414              		.loc 1 1127 0
 2415 005c 0123     		movs	r3, #1
 2416 005e 8361     		str	r3, [r0, #24]
 2417              	.L207:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2418              		.loc 1 1129 0
 2419 0060 164B     		ldr	r3, .L209
 2420 0062 5A68     		ldr	r2, [r3, #4]
 2421 0064 02F4C032 		and	r2, r2, #98304
 2422 0068 C261     		str	r2, [r0, #28]
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2423              		.loc 1 1130 0
 2424 006a 5A68     		ldr	r2, [r3, #4]
 2425 006c 02F47012 		and	r2, r2, #3932160
 2426 0070 0262     		str	r2, [r0, #32]
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 2427              		.loc 1 1132 0
 2428 0072 DB6A     		ldr	r3, [r3, #44]
 2429 0074 03F00F03 		and	r3, r3, #15
 2430 0078 4362     		str	r3, [r0, #36]
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2431              		.loc 1 1134 0
 2432 007a 7047     		bx	lr
 2433              	.L196:
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2434              		.loc 1 1071 0
ARM GAS  /tmp/ccDUHHvc.s 			page 75


 2435 007c 0F4B     		ldr	r3, .L209
 2436 007e 1B68     		ldr	r3, [r3]
 2437 0080 13F4803F 		tst	r3, #65536
 2438 0084 03D0     		beq	.L198
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2439              		.loc 1 1073 0
 2440 0086 4FF48033 		mov	r3, #65536
 2441 008a 4360     		str	r3, [r0, #4]
 2442 008c C2E7     		b	.L197
 2443              	.L198:
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2444              		.loc 1 1077 0
 2445 008e 0023     		movs	r3, #0
 2446 0090 4360     		str	r3, [r0, #4]
 2447 0092 BFE7     		b	.L197
 2448              	.L199:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2449              		.loc 1 1090 0
 2450 0094 0023     		movs	r3, #0
 2451 0096 C360     		str	r3, [r0, #12]
 2452 0098 C3E7     		b	.L200
 2453              	.L201:
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2454              		.loc 1 1100 0
 2455 009a 084B     		ldr	r3, .L209
 2456 009c 1B6A     		ldr	r3, [r3, #32]
 2457 009e 13F0010F 		tst	r3, #1
 2458 00a2 02D0     		beq	.L203
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2459              		.loc 1 1102 0
 2460 00a4 0123     		movs	r3, #1
 2461 00a6 8360     		str	r3, [r0, #8]
 2462 00a8 CCE7     		b	.L202
 2463              	.L203:
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2464              		.loc 1 1106 0
 2465 00aa 0023     		movs	r3, #0
 2466 00ac 8360     		str	r3, [r0, #8]
 2467 00ae C9E7     		b	.L202
 2468              	.L204:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2469              		.loc 1 1116 0
 2470 00b0 0023     		movs	r3, #0
 2471 00b2 4361     		str	r3, [r0, #20]
 2472 00b4 CDE7     		b	.L205
 2473              	.L208:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2474              		.loc 1 1123 0
 2475 00b6 0223     		movs	r3, #2
 2476 00b8 8361     		str	r3, [r0, #24]
 2477 00ba D1E7     		b	.L207
 2478              	.L210:
 2479              		.align	2
 2480              	.L209:
 2481 00bc 00100240 		.word	1073876992
 2482              		.cfi_endproc
 2483              	.LFE136:
ARM GAS  /tmp/ccDUHHvc.s 			page 76


 2485              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2486              		.align	1
 2487              		.global	HAL_RCC_GetClockConfig
 2488              		.syntax unified
 2489              		.thumb
 2490              		.thumb_func
 2491              		.fpu fpv4-sp-d16
 2493              	HAL_RCC_GetClockConfig:
 2494              	.LFB137:
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2495              		.loc 1 1145 0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 0
 2498              		@ frame_needed = 0, uses_anonymous_args = 0
 2499              		@ link register save eliminated.
 2500              	.LVL218:
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2501              		.loc 1 1151 0
 2502 0000 0F23     		movs	r3, #15
 2503 0002 0360     		str	r3, [r0]
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2504              		.loc 1 1154 0
 2505 0004 0B4B     		ldr	r3, .L212
 2506 0006 5A68     		ldr	r2, [r3, #4]
 2507 0008 02F00302 		and	r2, r2, #3
 2508 000c 4260     		str	r2, [r0, #4]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2509              		.loc 1 1157 0
 2510 000e 5A68     		ldr	r2, [r3, #4]
 2511 0010 02F0F002 		and	r2, r2, #240
 2512 0014 8260     		str	r2, [r0, #8]
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2513              		.loc 1 1160 0
 2514 0016 5A68     		ldr	r2, [r3, #4]
 2515 0018 02F4E062 		and	r2, r2, #1792
 2516 001c C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccDUHHvc.s 			page 77


1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2517              		.loc 1 1163 0
 2518 001e 5B68     		ldr	r3, [r3, #4]
 2519 0020 DB08     		lsrs	r3, r3, #3
 2520 0022 03F4E063 		and	r3, r3, #1792
 2521 0026 0361     		str	r3, [r0, #16]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2522              		.loc 1 1166 0
 2523 0028 034B     		ldr	r3, .L212+4
 2524 002a 1B68     		ldr	r3, [r3]
 2525 002c 03F00703 		and	r3, r3, #7
 2526 0030 0B60     		str	r3, [r1]
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2527              		.loc 1 1167 0
 2528 0032 7047     		bx	lr
 2529              	.L213:
 2530              		.align	2
 2531              	.L212:
 2532 0034 00100240 		.word	1073876992
 2533 0038 00200240 		.word	1073881088
 2534              		.cfi_endproc
 2535              	.LFE137:
 2537              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2538              		.align	1
 2539              		.weak	HAL_RCC_CSSCallback
 2540              		.syntax unified
 2541              		.thumb
 2542              		.thumb_func
 2543              		.fpu fpv4-sp-d16
 2545              	HAL_RCC_CSSCallback:
 2546              	.LFB139:
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
ARM GAS  /tmp/ccDUHHvc.s 			page 78


1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2547              		.loc 1 1192 0
 2548              		.cfi_startproc
 2549              		@ args = 0, pretend = 0, frame = 0
 2550              		@ frame_needed = 0, uses_anonymous_args = 0
 2551              		@ link register save eliminated.
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     */ 
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2552              		.loc 1 1196 0
 2553 0000 7047     		bx	lr
 2554              		.cfi_endproc
 2555              	.LFE139:
 2557              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2558              		.align	1
 2559              		.global	HAL_RCC_NMI_IRQHandler
 2560              		.syntax unified
 2561              		.thumb
 2562              		.thumb_func
 2563              		.fpu fpv4-sp-d16
 2565              	HAL_RCC_NMI_IRQHandler:
 2566              	.LFB138:
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2567              		.loc 1 1175 0
 2568              		.cfi_startproc
 2569              		@ args = 0, pretend = 0, frame = 0
 2570              		@ frame_needed = 0, uses_anonymous_args = 0
 2571 0000 08B5     		push	{r3, lr}
 2572              	.LCFI15:
 2573              		.cfi_def_cfa_offset 8
 2574              		.cfi_offset 3, -8
 2575              		.cfi_offset 14, -4
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2576              		.loc 1 1177 0
 2577 0002 064B     		ldr	r3, .L219
 2578 0004 9B68     		ldr	r3, [r3, #8]
 2579 0006 13F0800F 		tst	r3, #128
 2580 000a 00D1     		bne	.L218
 2581              	.L215:
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2582              		.loc 1 1185 0
 2583 000c 08BD     		pop	{r3, pc}
 2584              	.L218:
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2585              		.loc 1 1180 0
 2586 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2587              	.LVL219:
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2588              		.loc 1 1183 0
 2589 0012 034B     		ldr	r3, .L219+4
 2590 0014 8022     		movs	r2, #128
 2591 0016 1A70     		strb	r2, [r3]
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2592              		.loc 1 1185 0
ARM GAS  /tmp/ccDUHHvc.s 			page 79


 2593 0018 F8E7     		b	.L215
 2594              	.L220:
 2595 001a 00BF     		.align	2
 2596              	.L219:
 2597 001c 00100240 		.word	1073876992
 2598 0020 0A100240 		.word	1073877002
 2599              		.cfi_endproc
 2600              	.LFE138:
 2602              		.global	aPredivFactorTable
 2603              		.global	aPLLMULFactorTable
 2604              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2605              		.align	2
 2606              		.set	.LANCHOR0,. + 0
 2609              	aPLLMULFactorTable:
 2610 0000 02       		.byte	2
 2611 0001 03       		.byte	3
 2612 0002 04       		.byte	4
 2613 0003 05       		.byte	5
 2614 0004 06       		.byte	6
 2615 0005 07       		.byte	7
 2616 0006 08       		.byte	8
 2617 0007 09       		.byte	9
 2618 0008 0A       		.byte	10
 2619 0009 0B       		.byte	11
 2620 000a 0C       		.byte	12
 2621 000b 0D       		.byte	13
 2622 000c 0E       		.byte	14
 2623 000d 0F       		.byte	15
 2624 000e 10       		.byte	16
 2625 000f 10       		.byte	16
 2626              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2627              		.align	2
 2628              		.set	.LANCHOR1,. + 0
 2631              	aPredivFactorTable:
 2632 0000 01       		.byte	1
 2633 0001 02       		.byte	2
 2634 0002 03       		.byte	3
 2635 0003 04       		.byte	4
 2636 0004 05       		.byte	5
 2637 0005 06       		.byte	6
 2638 0006 07       		.byte	7
 2639 0007 08       		.byte	8
 2640 0008 09       		.byte	9
 2641 0009 0A       		.byte	10
 2642 000a 0B       		.byte	11
 2643 000b 0C       		.byte	12
 2644 000c 0D       		.byte	13
 2645 000d 0E       		.byte	14
 2646 000e 0F       		.byte	15
 2647 000f 10       		.byte	16
 2648              		.text
 2649              	.Letext0:
 2650              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 2651              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 2652              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2653              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2654              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
ARM GAS  /tmp/ccDUHHvc.s 			page 80


 2655              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2656              		.file 9 "/usr/include/newlib/sys/lock.h"
 2657              		.file 10 "/usr/include/newlib/sys/_types.h"
 2658              		.file 11 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2659              		.file 12 "/usr/include/newlib/sys/reent.h"
 2660              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2661              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2662              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2663              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccDUHHvc.s 			page 81


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rcc.c
     /tmp/ccDUHHvc.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccDUHHvc.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccDUHHvc.s:193    .text.HAL_RCC_DeInit:00000000000000d8 $d
     /tmp/ccDUHHvc.s:202    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccDUHHvc.s:209    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccDUHHvc.s:835    .text.HAL_RCC_OscConfig:00000000000002e8 $d
     /tmp/ccDUHHvc.s:842    .text.HAL_RCC_OscConfig:00000000000002f0 $t
     /tmp/ccDUHHvc.s:1522   .text.HAL_RCC_OscConfig:00000000000005fc $d
     /tmp/ccDUHHvc.s:1534   .text.HAL_RCC_OscConfig:0000000000000608 $t
     /tmp/ccDUHHvc.s:1572   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccDUHHvc.s:1579   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccDUHHvc.s:1648   .text.HAL_RCC_MCOConfig:000000000000004c $d
     /tmp/ccDUHHvc.s:1653   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccDUHHvc.s:1660   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccDUHHvc.s:1694   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccDUHHvc.s:1701   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccDUHHvc.s:1735   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccDUHHvc.s:1742   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccDUHHvc.s:1841   .text.HAL_RCC_GetSysClockFreq:0000000000000068 $d
     /tmp/ccDUHHvc.s:1850   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccDUHHvc.s:1857   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccDUHHvc.s:2190   .text.HAL_RCC_ClockConfig:0000000000000190 $d
     /tmp/ccDUHHvc.s:2198   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccDUHHvc.s:2205   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccDUHHvc.s:2219   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccDUHHvc.s:2224   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccDUHHvc.s:2231   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccDUHHvc.s:2273   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccDUHHvc.s:2279   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccDUHHvc.s:2286   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccDUHHvc.s:2328   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccDUHHvc.s:2334   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccDUHHvc.s:2341   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccDUHHvc.s:2481   .text.HAL_RCC_GetOscConfig:00000000000000bc $d
     /tmp/ccDUHHvc.s:2486   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccDUHHvc.s:2493   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccDUHHvc.s:2532   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/ccDUHHvc.s:2538   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccDUHHvc.s:2545   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccDUHHvc.s:2558   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccDUHHvc.s:2565   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccDUHHvc.s:2597   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
     /tmp/ccDUHHvc.s:2631   .rodata.aPredivFactorTable:0000000000000000 aPredivFactorTable
     /tmp/ccDUHHvc.s:2609   .rodata.aPLLMULFactorTable:0000000000000000 aPLLMULFactorTable
     /tmp/ccDUHHvc.s:2605   .rodata.aPLLMULFactorTable:0000000000000000 $d
     /tmp/ccDUHHvc.s:2627   .rodata.aPredivFactorTable:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
HAL_GPIO_Init
AHBPrescTable
APBPrescTable
